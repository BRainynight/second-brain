{"/":{"title":"🪴 Main Page","content":"\n我會將我所讀所學的一點點摘要進來，希望有一天他們可以建構起強大的知識網路。\n\n\n\n## 近期閱讀\n\n- [[notes/Resource/Books/TheSecondBrain]]\n\n\n## 文章引導\n\n- [[notes]]\n- [[tags]]\n- \n\n","lastmodified":"2023-04-10T11:54:11.917019247Z","tags":[]},"/notes/Archive/Special-Syntax-in-Theme-Things-2":{"title":"Special Syntax in Theme Things 2","content":"\n## Basic\n- [ ] to-do\n- [/] incomplete\n- [x] done\n- [-] canceled\n- [\u003e] forwarded\n- [\u003c] scheduling\n\n## Extras\n- [?] question\n- [!] important\n- [*] star\n- [\"] quote\n- [l] location\n- [b] bookmark\n- [i] information\n- [S] savings\n- [I] idea\n- [p] pros\n- [c] cons\n- [f] fire\n- [k] key\n- [w] win\n- [u] up\n- [d] down\n\n\nhttps://github.com/colineckert/obsidian-things\n","lastmodified":"2023-04-10T11:54:11.933019065Z","tags":[]},"/notes/Area/Hugo/Hugo-Publish-Simple-Page":{"title":"Hugo Publish Simple Page","content":"## Hugo 建立部落格的範例\n\n直接用 Hugo 建立部落格，不使用 Quartz 的範例:\n\n### Start\n\nhugo new site quickstart  \ncd quickstart  \ngit init  \ngit submodule add https://github.com/theNewDynamic/gohugo-theme-ananke themes/ananke  \necho \"theme = 'ananke'\" \u003e\u003e config.toml  \nhugo server\n\n[https://gohugo.io/getting-started/quick-start/](https://gohugo.io/getting-started/quick-start/)\n\n### 將 Markdown 檔案轉換成 Web Page\n\nhugo server --buildDrafts  \nhugo server -D\n","lastmodified":"2023-04-10T11:54:11.933019065Z","tags":[]},"/notes/Area/Hugo/Hugo-front-matter":{"title":"可使用的metadata","content":"\nSource: https://gohugo.io/content-management/front-matter/\n\n舉例:\n\n```yaml\ncategories:\n- Development\n- VIM\ndate: \"2012-04-06\"\ndescription: spf13-vim is a cross platform distribution of vim plugins and resources\n  for Vim.\nslug: spf13-vim-3-0-release-and-new-website\ntags:\n- .vimrc\n- plugins\n- spf13-vim\n- vim\ntitle: spf13-vim 3.0 release and new website\n```\n\n可建立 Obsidian 模板:\n\n```\ntitle: \ndate: {{date}}\ndescription: \n\nslug: alias-name\ntags:\n- default\ncategories:\n- default\n\n```\n\n本頁所使用的 metadata: \n```\ntitle: \"可使用的metadata\"\ndate: 2023-04-09\nslug: usable meta data # 網址變成此名稱\ncategories:\n- blog\n```\n\n這裡，我讓檔案名稱變成\n- filename: `Hugo front matter.md` \n- title: `可使用的metadata` \u003e 頁面標題\n- slug: `usable meta data` \u003e 連結名稱\n\n\n## Category vs. Tag\n\n在打造第二大腦中，作者提出 Tag 是一種打破資料夾邊界的連結方式。我希望，在我的部落格中，我希望讓網頁會 Category 做資料夾壁壘的分類，有必要時再以 tag 打破邊界。\n\n但似乎 quartz 支援的只有 tags 而沒有 categories。我想參考這篇文章試試看能不能打開該功能: \nhttps://ithelp.ithome.com.tw/articles/10244921","lastmodified":"2023-04-10T11:54:11.933019065Z","tags":[]},"/notes/Area/Obsidian/ObsidianPlugins":{"title":"ObsidianPlugins","content":"## Theme\n- 當前用的是 Thing2\n- [minimal](https://minimal.guide/Home) 也是熱門的主題，且與許多 plugin 相容\n\t- 但是 header 之間不同階級沒有大小之分，我不喜歡，要用需要改 CSS。\n\n\n\n## Plugin\n- Obsidian Dataview mode: like notion https://ithelp.ithome.com.tw/articles/10279262\n\n\n","lastmodified":"2023-04-10T11:54:11.933019065Z","tags":[]},"/notes/Area/Obsidian/SyncObsidian":{"title":"SyncObsidian","content":"想在 IOS 上面也有 Sync 的 Obsidian 可以用!\n\n社群的作法是裝 ISH 以 Git 同步，我想實驗用 Terminus (比起 ISH 有在維護)\n\n- [Sync with git on iOS for free using iSH](https://forum.obsidian.md/t/mobile-sync-with-git-on-ios-for-free-using-ish/20861)\n- [Setting up iOS git-based syncing with mobile app (using Working Copy)](https://forum.obsidian.md/t/mobile-setting-up-ios-git-based-syncing-with-mobile-app-using-working-copy/16499)\n","lastmodified":"2023-04-10T11:54:11.933019065Z","tags":[]},"/notes/Area/PKM/%E4%BD%BF%E7%94%A8-Quartz-%E5%BB%BA%E7%AB%8B%E9%83%A8%E8%90%BD%E6%A0%BC":{"title":"使用 Quartz 建立部落格","content":"\n\n## Install\n\n1. Git\n2. Go lang\n3. Hugo: 需要手動加環境變數\n4.  `go-obsidian`\n    ```go\n    go install github.com/jackyzha0/hugo-obsidian@latest\n    ```\n5. **Optional**  `make` `: Windows 下須使用 MinGW 安裝，參考: [C++ 開發環境 在 Windows 11 中安裝 mingw-w64 及設定環境變數](http://kaiching.org/pydoing/cpp-guide4/how-to-install-mingw-w64-and-set-environment-variable.html)\n\nHugo 需要以 PowerShell](https://learn.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-windows) 或 WSL , Git Bash 這種 linux-based terminal 運行。\n\n## Start to Quzrtz\n官方網站有相關的教學: \n- https://quartz.jzhao.xyz/notes/setup/\n- https://quartz.jzhao.xyz/notes/obsidian/\n\n以下我將擷取最短步驟\n### 摘要步驟\n\n1. Fork quartz 的 Github 專案，並 clone 到 Local。\n2. 在 Clone 下來的倉庫中找到資料夾 `content`\n3. 在 `content` 資料夾中創建 Obsidian 倉庫，或是把既有的倉庫內容放到 content 裡面。\n4. 將 Obsidian 倉庫轉換成 Hugo 可用的\n\n    ```bash\n     hugo-obsidian -input=content -output=assets/indices -index -root=.\n    ```\n\n    需要注意，markdown 檔名不可以有 `.`，且每一篇文章都要有 metadata: 在頁首有 `title` 的資訊，如下: \n\n    ```markdown\n    ---\n    title: \"Private Stuff\"\n    ---\n    ```\n\n    其實有更多的 meta-data 可以設定，可以看 quartz 給的範例。由於使用 quartz 創建模板必須要 metadata，[作者建議](https://quartz.jzhao.xyz/notes/obsidian/)可以直接在 Obsidian 裡面創建模板，讓每新增一個模板都有這些資訊! \n\n5. 啟用 Hugo Server\n\n    ```bash\n     hugo server --enableGitInfo --minify \t# render faster\n     hugo server --disableFastRender \t\t# search bar will enable\n    ```\n\n\n## 關於 Obsidian 模板功能\n- 可以參考此文介紹如何建立模板 [【Obsidian 使用教學】筆記篇 05 — 結合資訊處理流程，讓筆記的 Metadata 變得更詳細](https://medium.com/pm%E7%9A%84%E7%94%9F%E7%94%A2%E5%8A%9B%E5%B7%A5%E5%85%B7%E7%AE%B1/obsidian-%E4%BD%BF%E7%94%A8%E6%95%99%E5%AD%B8-%E7%AD%86%E8%A8%98%E7%AF%87-05-%E7%B5%90%E5%90%88%E8%B3%87%E8%A8%8A%E8%99%95%E7%90%86%E6%B5%81%E7%A8%8B-e6a953438f43)\n- 要注意，插入模板的時候，需要打完檔案名稱，並把 Insert 的鼠標要在 Header 1 下的第一行。\n\n## 發佈到 Github Page\n\n參考 [[Publish Quartz to Github Page]]\n\n\n## 修改首頁\n\n如果想在首頁放置一些連結，引導到特定頁面，需要注意以下幾點: 雙向連結內放的是「相對於該頁面的路徑」，路徑對應的是檔案名稱。\n\n1.  當檔案名稱有空白時，網址會以 `-` 取代空白，但在雙向連結的撰寫中不可以寫 `-`。\n```\n[[notes/Area/PKM/Setup Quartz]] # OK  \n[[notes/Area/PKM/Setup-Quartz]] # Broken internal link\n```\n2.  注意結尾不要多加反斜線    \n3.  主頁相對於各檔案都是以 `note/` 開始\n","lastmodified":"2023-04-10T11:54:11.933019065Z","tags":[]},"/notes/Area/PKM/Publish-Quartz-to-Github-Page":{"title":"將Quartz發佈到Github Page","content":"由於我對 github action 不熟悉，在設置到 github page 的時候遇到了一點困難...。\n\n首先，如果專案是從 templage fork 過來的，它應該分成 `hugo` 跟 `master` 兩個 branch。其中\n\n- `hugo`: 存放 config, markdown files (`content` 底下) 的地方\n- `master`: 利用 github action 把專案內容轉成靜態網頁\n\n我因為是 clone 下來再 push 到自己的專案，沒有遵守這兩個命名方式而遇到了一點困難。在我的專案中，`main` 對應的是存放 markdown files (轉換前) 的 page，`publish` 才是 github page 再生成時所根據的 branch。\n\n## 設置 Github Action \n\n如作者的[教學](https://quartz.jzhao.xyz/notes/hosting/)所說，首先要打開 workflow permission。位置是 `Setting \u003e Action \u003e General`。\n\n![Set workflow Permission](https://quartz.jzhao.xyz/notes/images/github-actions.png)\n\n## 設置 Github Page \n\n在 `Setting \u003e Pages` 當中，將設置 Source 項目的 branch 設成 `master` (我則是設成 `pubslish`)。Domain name 除非自己有特別買網域，否則不用動。\n\n![Github page setting](https://quartz.jzhao.xyz//notes/images/github-pages.png)\n\n## Domain Name \n\n一共會影響兩個地方:\n\n- `config.toml`\n- `.github/workflows/deploy.yaml`\n\n如果用 github 預設的網址會是 `\u003cYOUR-GITHUB-USERNAME\u003e.github.io/\u003cProject-Name\u003e`。`config.toml` 的設定很簡單，就寫這個專案 root 網址為何:\n\n```yaml\nbaseURL = \"https://\u003cYOUR-GITHUB-USERNAME\u003e.github.io/\u003cPROJ\u003e/\"\n```\n\n`.github/workflows/deploy.yaml` 則要小心，這裡直接以我的為例，需要改兩個地方。\n\n```yaml\non:\n  push:\n    branches:\n      - main # 作者的範例是 hugo, 因為我有換 branch name 所以要改      \n```\n\n這樣，每當 push 行為發生在 `main` branch 上，就會觸發這個 action。 \n\n\n```yaml\n      - name: Deploy\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          publish_dir: ./public\n          publish_branch: publish\t# 作者預設是 master\n          cname: brainynight.github.io # 不用把 proj name 也寫上去\n```\n\n## 預覽變更\n\nGithub Action 當中，已經把建立 graph (`hugo-obsidian`) 的步驟也包含上去了。但要發布之前我們總需要自己本地先看看。\n\n作者其實有 makefile，應該可以 `make server`，會自動建立 graph 和 `hugo server`，或是懶得安裝 `make` 也可以直接打指令。以 windows 想複製 D 槽檔案為例: \n\n```bash\ncp /d/Database/*.md content/notes\nhugo-obsidian -input=content -output=assets/indices -index -root=.\nhugo server --disableFastRender\n```\n\n","lastmodified":"2023-04-10T11:54:11.933019065Z","tags":["Quartz"]},"/notes/Resource/Books/The-Second-Brain":{"title":"打造第二大腦","content":"\u003e 成為一個「能傳達資訊、且具有出色詮釋能力」的人! \n\n- Key Feature In this sentence:\n\t- Can construct infomation\n\t- Can express info effectively\n\n## CODE \n\n### C (Capture)\n\u003e 將資訊蒐集在沒有雜訊的地方，你可以心無旁騖地找到它。\n\n- 即使只是看一眼收藏，也要慎選收藏的地方。\n- 不好的地方: 個人信箱、FB 的收藏 (很容易被社群吸走) ...\n- 適合的地方: 屬於自己的聊天室 (Line keep)\n\n### O (Orgnize)\n\u003e 以 Project 分類 ，不要以類別分類。\n\n- 淺台詞: 以目的導向分類。ex. 「專注力協議」的書摘應該放在「成為心無旁鶩的人」而不是「心理學」。\n- 像是歸類在「心理學」、或是「工作生產力」這種圖書館式的分類，你不分看標題也知道它是哪一類，不需要做無意義的分類。\n- 放在「成為心無旁鶩的人」，點進去這個目標，此書摘就會快速地浮現上來，告訴你快使用它! \n- 知識必須用到才有用! \n\n### D (Distill, 萃取)\n\u003e 用 Bullet Point 告訴未來的你，這篇筆記在說什麼?\n\n- 4 個層次的萃取，每一次萃取約保留 10~20% 的訊息量。\n- 萃取的時機很重要，無效的萃取反而遺失重要訊息。\n- How to partice? Distill the note when read it once time.\n\n### E (Express, 表達)\n\u003e Any way. Deliver it, and share! \n\n\n## 釐清目標: 你想解決什麼問題?\n\u003e Which problems do you want to resovle by The Second Brain? \n\n**費曼: 12道難題**\n它應該具有轉移性，核心精神不變，但領域可能改變的特質。記得這些你的目標，當資訊流過你身邊時，驗證他們是否能幫助你解決這些難題? If true, Capture it! \n\nMy current thinking: \n1. How to improve poor english?\n2. How to spend time \u0026 learning effectively?\n3. How to take effective note?\n4. How to debug (gdb) effective?\n\n## Capture: What Info Can put into Your Second Brain?\n\n- 摘要! 通常不應超過原資訊量的 1/10\n- 具有啟發性的，改變你的想法的 (不懂 太抽象)\n- 在未來可以被使用的 (ex. How to own a project? How to leader a team?)\n- 跟你自身相關的: 珍貴的，你想永久記憶的回憶。\n- 相反、不同觀點的: 避免佐證偏差 (confirmation bias)，可以使你跳脫當前認知的。\n\n\u003e 記住，重新消化過的資訊更好吸收! \n\n## Organize: Where Do the Info Put?\n\n不使用圖書館式的分類法，作者提出 PARA 方法，可以看出重要程度依序遞減。人的注意力有限，請第一眼，就看到最可能幫助你的資料。\n\n\u003e 讓最重要的任務、最短期的目標的相關資料上，沒有過多的雜訊\n\nP (Project): 短期任務\n- Working project\n- Personal project (ex. blog), side project, 減重... \n\n\nA (Area): 長期任務，長期想掌握的目標\n- 健康，不同於 project 中的「減重」是明確目標、是達成健康的手段，健康是長期目標。\n\nR (Resource): 未來有用處的\n- 有興趣的東西、嗜好: 精油、咖啡\n- 研究的可提: effective\n- 有用的參考: travel plan\n\nA (Archive): 備而不用\n- 不再有興趣的\n\n\n\n## Distill 萃取\n\n- 不要花相同的時間，處理相同的原始資料\n- 摘要! 用簡短的 bullet point 列出重點。\n- 誤區: 當不能了解其用處時，不應強行消化，否則重點非重點。\n\n\u003e My opinion: 每調閱它、閱讀一次，就萃取一次。\n\n### 參考方法: 4 個層次萃取\n\n每個步驟間應保留約 10~20% 的資料量，否則 brief isn't brief.\n1. 擷取段落\n2. 粗體字\n3. 螢光筆 highlight\n4.  bullet point \n\n### 以會議筆記舉例\n\n1. 列出所有討論出來，需要做的 (need to do)\n2. 劃出重點項目、關鍵字\n3. 簡短列出: 如何執行 (execute)\n\n## Express 表達\n\n### 哲學思辨: 如何騰出專注力，卻不消耗專注力?\n\u003e 使用中間產物\n\nProject 自起點到終點(成品)，有許多中間產物，例如: 草稿、大綱、顧客回覆。收集這些資料，放進第二大腦，達到重複使用! \n\n### 中間產物\n1. Note\n2. 不使用的 Proposal \n\t1. 以及檢討，為何不使用。可能是有重大缺陷，需要避免以後踩到。\n3. 半成品??? \n4. 團隊的文件，這相當於他人的經驗\n\n\n### 切分「一件事」\n一件事有很多碎片，如果你是從零開始，可以把完成這件事需要那些碎片寫下來，並把你花費專注力 build 好的碎片存起來，讓這些碎片可以 Re-use。\n\n同時，你在從零建構碎片時，也可以吸取別人的經驗，Reuse 別人的碎片! \n\n\n\n\n## Resource\n- Author's website: https://www.buildingasecondbrain.com/resources\n- Obsidian As a Second Brain: https://www.youtube.com/watch?v=nz99I7apNLI\u0026list=WL\u0026index=2\n- Should Logseq be Your Second Brain? https://www.youtube.com/watch?v=VJ2reQcpbYA\u0026list=WL\u0026index=3\n- Pick a Notes App: Your Notetaking Style (Part 1) https://www.youtube.com/watch?v=f3dDVtJ2sec\u0026list=WL\u0026index=4\n","lastmodified":"2023-04-10T11:54:11.933019065Z","tags":[]},"/notes/Resource/Whisky/%E6%A0%BC%E8%98%AD%E5%82%91-%E5%96%AE%E4%B8%80%E9%BA%A5%E8%8A%BD%E5%A8%81%E5%A3%AB%E5%BF%8C":{"title":"格蘭傑-單一麥芽威士忌","content":"Glenmorangie X Single Malt Scotch Whisky\n\n- 買於好事多，跟 \"知多\" 喝起來差不多，CP 值極佳!! \n- 理想價格: 600-650\n\n","lastmodified":"2023-04-10T11:54:11.933019065Z","tags":[]},"/notes/Resource/Whisky/%E9%A1%98%E6%9C%9B%E6%B8%85%E5%96%AE":{"title":"願望清單","content":"\n## 待過濾\n- [五支波本威士忌推薦文](https://medium.com/need-a-drink/%E5%8F%AA%E9%9C%80%E4%BA%94%E7%93%B6-%E6%B3%A2%E6%9C%AC-%E5%A8%81%E5%A3%AB%E5%BF%8C-%E7%BE%8E%E5%8F%B0%E5%8F%8B%E5%A5%BD-%E6%8E%A8%E8%96%A6%E6%B8%85%E5%96%AE-my-only-5-bourbon-whisky-i-need-112ff911ffbe)\n\n","lastmodified":"2023-04-10T11:54:11.933019065Z","tags":[]}}