{"index":{"links":{"/":[{"source":"/","target":"/notes/Resource/Books/The-Second-Brain","text":"notes/Resource/Books/The Second Brain"},{"source":"/","target":"/notes","text":"notes"},{"source":"/","target":"/tags","text":"tags"},{"source":"/","target":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","text":"notes/Project/Effective C++ Series/Effective C++ Outline"}],"/notes/Area/Obsidian/Obsidian-Plugins":[{"source":"/notes/Area/Obsidian/Obsidian-Plugins","target":"/notes/Area/Obsidian/Obsidian-Map-View","text":"Obsidian Map View"}],"/notes/Area/Quartz/%E4%BD%BF%E7%94%A8-Quartz-%E5%BB%BA%E7%AB%8B%E9%83%A8%E8%90%BD%E6%A0%BC":[{"source":"/notes/Area/Quartz/%E4%BD%BF%E7%94%A8-Quartz-%E5%BB%BA%E7%AB%8B%E9%83%A8%E8%90%BD%E6%A0%BC","target":"/notes/Area/Quartz/Publish-Quartz-to-Github-Page","text":"Publish Quartz to Github Page"}],"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1":[{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","target":"/notes/Project/Effective-C++-Series/%E7%B9%BC%E6%89%BF%E6%99%82%E7%9A%84%E5%90%8D%E7%A8%B1%E9%81%AE%E6%8E%A9%E8%A1%8C%E7%82%BA","text":"繼承時的名稱遮掩行為"},{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","target":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","text":"絕不重新定義繼承來的 Non-virtual Function"},{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","target":"/notes/Project/Effective-C++-Series/Total-Template-Specialization","text":"Total Template Specialization"},{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","target":"/notes/Project/Effective-C++-Series/%E4%BD%BF%E7%94%A8%E9%97%9C%E9%8D%B5%E5%AD%97-using-%E8%AE%93%E7%89%B9%E5%AE%9A-function-%E5%9C%A8-Scope-%E5%85%A7%E5%8F%AF%E8%A6%8B","text":"使用關鍵字 using 讓特定 function 在 Scope 內可見"},{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","target":"/notes/Project/Effective-C++-Series/%E7%B9%BC%E6%89%BF%E6%99%82%E7%9A%84%E5%90%8D%E7%A8%B1%E9%81%AE%E6%8E%A9%E8%A1%8C%E7%82%BA","text":"繼承時的名稱遮掩行為"}],"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96":[{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","target":"/notes/Project/Effective-C++-Series/%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%99%82%E8%AB%8B%E7%82%BA%E6%A8%A1%E6%9D%BF%E5%AE%9A%E7%BE%A9%E9%9D%9E%E6%88%90%E5%93%A1%E5%87%BD%E5%BC%8F","text":"需要型別轉換時請為模板定義非成員函式"},{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","target":"/notes/Project/Effective-C++-Series/%E5%BB%BA%E6%A7%8B%E5%92%8C%E8%A7%A3%E6%A7%8B%E5%BC%8F%E6%98%AF-inline-%E7%9A%84%E7%B3%9F%E7%B3%95%E4%BA%BA%E9%81%B8","text":"建構和解構式是 inline 的糟糕人選"},{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","target":"/notes/Project/Effective-C++-Series/80-20-Rule","text":"80-20 Rule"}],"/notes/Project/Effective-C++-Series/%E4%BD%BF%E7%94%A8%E9%97%9C%E9%8D%B5%E5%AD%97-using-%E8%AE%93%E7%89%B9%E5%AE%9A-function-%E5%9C%A8-Scope-%E5%85%A7%E5%8F%AF%E8%A6%8B":[{"source":"/notes/Project/Effective-C++-Series/%E4%BD%BF%E7%94%A8%E9%97%9C%E9%8D%B5%E5%AD%97-using-%E8%AE%93%E7%89%B9%E5%AE%9A-function-%E5%9C%A8-Scope-%E5%85%A7%E5%8F%AF%E8%A6%8B","target":"/notes/Project/Effective-C++-Series/%E7%B9%BC%E6%89%BF%E6%99%82%E7%9A%84%E5%90%8D%E7%A8%B1%E9%81%AE%E6%8E%A9%E8%A1%8C%E7%82%BA","text":"繼承時的名稱遮掩行為"},{"source":"/notes/Project/Effective-C++-Series/%E4%BD%BF%E7%94%A8%E9%97%9C%E9%8D%B5%E5%AD%97-using-%E8%AE%93%E7%89%B9%E5%AE%9A-function-%E5%9C%A8-Scope-%E5%85%A7%E5%8F%AF%E8%A6%8B","target":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","text":"確保 Derived Class 和 Base Class 之間必然保持 Is-a 關係"},{"source":"/notes/Project/Effective-C++-Series/%E4%BD%BF%E7%94%A8%E9%97%9C%E9%8D%B5%E5%AD%97-using-%E8%AE%93%E7%89%B9%E5%AE%9A-function-%E5%9C%A8-Scope-%E5%85%A7%E5%8F%AF%E8%A6%8B","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","text":"了解如何在 Template 中指涉 Base Class 成員"}],"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement":[{"source":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","target":"/notes/Project/Effective-C++-Series/Pure-Virtual-Function","text":"Pure Virtual Function"},{"source":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","target":"/notes/Project/Effective-C++-Series/Impure-Virtual-Function","text":"Impure Virtual Function"},{"source":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","target":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","text":"絕不重新定義繼承來的 Non-virtual Function"},{"source":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","text":"為多型用途的基礎類別宣告 virtual 解構式"}],"/notes/Project/Effective-C++-Series/%E5%A4%9A%E9%87%8D%E7%B9%BC%E6%89%BF-Multiple-Inheritance-MI":[{"source":"/notes/Project/Effective-C++-Series/%E5%A4%9A%E9%87%8D%E7%B9%BC%E6%89%BF-Multiple-Inheritance-MI","target":"/notes/Project/Effective-C++-Series/Virtual-Base-Class","text":"Virtual Base Class"}],"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF":[{"source":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","target":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E5%AE%9A-Composition-%E5%A1%91%E9%80%A0%E7%9A%84%E6%98%AF-Has-A%E9%97%9C%E4%BF%82-%E6%88%96-%E6%A0%B9%E6%93%9A%E6%9F%90%E7%89%A9%E5%AF%A6%E4%BD%9C%E7%9A%84%E9%97%9C%E4%BF%82","text":"確定 Composition 塑造的是 'Has-A'關係 或 '根據某物實作'的關係"},{"source":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","target":"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8","text":"讓介面易於被使用，不易誤用"},{"source":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","target":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","text":"確保 Derived Class 和 Base Class 之間必然保持 Is-a 關係"},{"source":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","target":"/notes/Project/Effective-C++-Series/%E5%B0%87%E6%AA%94%E6%A1%88%E7%9A%84%E7%B7%A8%E8%AD%AF%E4%BE%9D%E5%AD%98%E9%97%9C%E4%BF%82%E9%99%8D%E5%88%B0%E6%9C%80%E4%BD%8E","text":"將檔案的編譯依存關係降到最低"},{"source":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","target":"/notes/Project/Effective-C++-Series/EBO-Empty-Base-Optimization","text":"EBO (Empty Base Optimization)"}],"/notes/Project/Effective-C++-Series/%E5%B0%87%E6%AA%94%E6%A1%88%E7%9A%84%E7%B7%A8%E8%AD%AF%E4%BE%9D%E5%AD%98%E9%97%9C%E4%BF%82%E9%99%8D%E5%88%B0%E6%9C%80%E4%BD%8E":[{"source":"/notes/Project/Effective-C++-Series/%E5%B0%87%E6%AA%94%E6%A1%88%E7%9A%84%E7%B7%A8%E8%AD%AF%E4%BE%9D%E5%AD%98%E9%97%9C%E4%BF%82%E9%99%8D%E5%88%B0%E6%9C%80%E4%BD%8E","target":"/notes/Project/Effective-C++-Series/%E7%B7%A8%E8%AD%AF%E4%BE%9D%E5%AD%98-%E5%AE%A3%E5%91%8A%E5%BC%8F%E5%AE%9A%E7%BE%A9%E5%BC%8F%E8%88%87%E5%AF%A6%E4%BD%9C%E7%B4%B0%E7%AF%80","text":"編譯依存-宣告式、定義式與實作細節"},{"source":"/notes/Project/Effective-C++-Series/%E5%B0%87%E6%AA%94%E6%A1%88%E7%9A%84%E7%B7%A8%E8%AD%AF%E4%BE%9D%E5%AD%98%E9%97%9C%E4%BF%82%E9%99%8D%E5%88%B0%E6%9C%80%E4%BD%8E","target":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","text":"pimpl idiom (pointer to implementation)"}],"/notes/Project/Effective-C++-Series/%E5%B0%91%E5%81%9A%E8%BD%89%E5%9E%8B%E5%8B%95%E4%BD%9CMinimize-casting":[{"source":"/notes/Project/Effective-C++-Series/%E5%B0%91%E5%81%9A%E8%BD%89%E5%9E%8B%E5%8B%95%E4%BD%9CMinimize-casting","target":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","text":"區分介面繼承(interface)和實作繼承(implement)"}],"/notes/Project/Effective-C++-Series/%E6%80%9D%E7%B6%AD%E8%AA%A4%E5%8D%80-%E7%89%A9%E4%BB%B6%E5%BE%88%E5%B0%8F%E5%B0%B1%E5%8F%AF%E4%BB%A5-Pass-By-value":[{"source":"/notes/Project/Effective-C++-Series/%E6%80%9D%E7%B6%AD%E8%AA%A4%E5%8D%80-%E7%89%A9%E4%BB%B6%E5%BE%88%E5%B0%8F%E5%B0%B1%E5%8F%AF%E4%BB%A5-Pass-By-value","target":"/notes/Project/Effective-C++-Series/Pass-by-value-%E7%95%B6%E4%B8%AD%E7%9A%84-Copy-%E8%A1%8C%E7%82%BA","text":"Pass by value 當中的 Copy 行為"}],"/notes/Project/Effective-C++-Series/%E6%89%93%E7%A0%B4-Constness-%E9%99%90%E5%88%B6":[{"source":"/notes/Project/Effective-C++-Series/%E6%89%93%E7%A0%B4-Constness-%E9%99%90%E5%88%B6","target":"/notes/Project/Effective-C++-Series/%E9%81%BF%E5%85%8D%E5%82%B3%E5%9B%9E-Handles-%E6%8C%87%E5%90%91%E7%89%A9%E4%BB%B6%E7%9A%84-Private-Protected-Member-Data","text":"避免傳回 Handles 指向物件的 Private \u0026 Protected Member Data"}],"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F":[{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/Item47-Use-traits-classes-for-information-about-types","text":"Item47 Use traits classes for information about types"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/%E5%B7%A5%E5%BB%A0%E5%87%BD%E5%BC%8F-Factory-Function","text":"工廠函式 (Factory Function)"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/Smart-Pointer","text":"條款13 使用資源管理器"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8","text":"讓介面易於被使用，不易誤用"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/%E4%B8%8D%E8%A6%81%E7%82%BA%E9%9D%9E%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84-Base-Class-%E5%AE%A3%E5%91%8A-Virtual-Function","text":"不要為非多型用途的 Base Class 宣告 Virtual Function"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/Item55-Familiarize-yourself-with-Boost","text":"Item55 Familiarize yourself with Boost"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/Pure-Virtual-Destructor","text":"Pure Virtual Destructor"}],"/notes/Project/Effective-C++-Series/%E7%82%BA%E7%95%B0%E5%B8%B8%E5%AE%89%E5%85%A8-Exception-safe-%E8%80%8C%E5%8A%AA%E5%8A%9B%E6%98%AF%E5%80%BC%E5%BE%97%E7%9A%84":[{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E7%95%B0%E5%B8%B8%E5%AE%89%E5%85%A8-Exception-safe-%E8%80%8C%E5%8A%AA%E5%8A%9B%E6%98%AF%E5%80%BC%E5%BE%97%E7%9A%84","target":"/notes/Project/Effective-C++-Series/Mutex","text":"Mutex"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E7%95%B0%E5%B8%B8%E5%AE%89%E5%85%A8-Exception-safe-%E8%80%8C%E5%8A%AA%E5%8A%9B%E6%98%AF%E5%80%BC%E5%BE%97%E7%9A%84","target":"/notes/Project/Effective-C++-Series/Modern-C++-noexcept","text":"Modern C++ noexcept"}],"/notes/Project/Effective-C++-Series/%E7%95%B6%E6%89%80%E6%9C%89%E7%9A%84%E5%8F%83%E6%95%B8%E9%83%BD%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%8E%A1%E7%94%A8-Non-member-Function":[{"source":"/notes/Project/Effective-C++-Series/%E7%95%B6%E6%89%80%E6%9C%89%E7%9A%84%E5%8F%83%E6%95%B8%E9%83%BD%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%8E%A1%E7%94%A8-Non-member-Function","target":"/notes/Project/Effective-C++-Series/operator-overloading","text":"operator overloading"}],"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82":[{"source":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","target":"/notes/Project/Effective-C++-Series/Has-A","text":"Has A"},{"source":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","target":"/notes/Project/Effective-C++-Series/Is-Implemented-in-Terms-of","text":"Is Implemented in Terms of"},{"source":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","target":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E5%AE%9A-Composition-%E5%A1%91%E9%80%A0%E7%9A%84%E6%98%AF-Has-A%E9%97%9C%E4%BF%82-%E6%88%96-%E6%A0%B9%E6%93%9A%E6%9F%90%E7%89%A9%E5%AF%A6%E4%BD%9C%E7%9A%84%E9%97%9C%E4%BF%82","text":"確定 Composition 塑造的是 'Has-A'關係 或 '根據某物實作'的關係"},{"source":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","target":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","text":"審慎的使用 Private 繼承"}],"/notes/Project/Effective-C++-Series/%E7%A2%BA%E5%AE%9A-Composition-%E5%A1%91%E9%80%A0%E7%9A%84%E6%98%AF-Has-A%E9%97%9C%E4%BF%82-%E6%88%96-%E6%A0%B9%E6%93%9A%E6%9F%90%E7%89%A9%E5%AF%A6%E4%BD%9C%E7%9A%84%E9%97%9C%E4%BF%82":[{"source":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E5%AE%9A-Composition-%E5%A1%91%E9%80%A0%E7%9A%84%E6%98%AF-Has-A%E9%97%9C%E4%BF%82-%E6%88%96-%E6%A0%B9%E6%93%9A%E6%9F%90%E7%89%A9%E5%AF%A6%E4%BD%9C%E7%9A%84%E9%97%9C%E4%BF%82","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","text":"了解 Inline 的裡裡外外"}],"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function":[{"source":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","target":"/notes/Project/Effective-C++-Series/%E7%B9%BC%E6%89%BF%E6%99%82%E7%9A%84%E5%90%8D%E7%A8%B1%E9%81%AE%E6%8E%A9%E8%A1%8C%E7%82%BA","text":"繼承時的名稱遮掩行為"},{"source":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","target":"/notes/Project/Effective-C++-Series/%E9%9D%9C%E6%85%8B%E7%B6%81%E5%AE%9A-statically-bound-%E8%88%87%E5%8B%95%E6%85%8B%E7%B6%81%E5%AE%9A-dynamically-bound","text":"靜態綁定 (statically bound) 與動態綁定 (dynamically bound)"},{"source":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","target":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","text":"確保 Derived Class 和 Base Class 之間必然保持 Is-a 關係"},{"source":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","target":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","text":"區分介面繼承(interface)和實作繼承(implement)"}],"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Function-Pointer-%E5%92%8C-tr1-function-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Strategy-Pattern":[{"source":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Function-Pointer-%E5%92%8C-tr1-function-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Strategy-Pattern","target":"/notes/Project/Effective-C++-Series/Classic-Strategy-Pattern","text":"Strategy Pattern"},{"source":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Function-Pointer-%E5%92%8C-tr1-function-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Strategy-Pattern","target":"/notes/Project/Effective-C++-Series/C++11-std-function","text":"C++11 std function"},{"source":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Function-Pointer-%E5%92%8C-tr1-function-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Strategy-Pattern","target":"/notes/Project/Effective-C++-Series/non-member-non-friend-function","text":"non-member \u0026\u0026 non-friend function"}],"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Non-Virtual-Interface-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Template-Method-Pattern":[{"source":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Non-Virtual-Interface-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Template-Method-Pattern","target":"/notes/Project/Effective-C++-Series/Template-Method","text":"Template Method"},{"source":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Non-Virtual-Interface-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Template-Method-Pattern","target":"/notes/Project/Effective-C++-Series/%E4%B8%8D%E8%A6%81%E7%82%BA%E9%9D%9E%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84-Base-Class-%E5%AE%A3%E5%91%8A-Virtual-Function","text":"不要為非多型用途的 Base Class 宣告 Virtual Function"}],"/notes/Project/Effective-C++-Series/%E8%A7%A3%E6%A7%8B%E5%BC%8F%E8%88%87%E7%95%B0%E5%B8%B8":[{"source":"/notes/Project/Effective-C++-Series/%E8%A7%A3%E6%A7%8B%E5%BC%8F%E8%88%87%E7%95%B0%E5%B8%B8","target":"/notes/Project/Effective-C++-Series/Modern-C++-noexcept","text":"Modern C++ noexcept"},{"source":"/notes/Project/Effective-C++-Series/%E8%A7%A3%E6%A7%8B%E5%BC%8F%E8%88%87%E7%95%B0%E5%B8%B8","target":"/notes/Project/Effective-C++-Series/Chapter3","text":"Chapter3"},{"source":"/notes/Project/Effective-C++-Series/%E8%A7%A3%E6%A7%8B%E5%BC%8F%E8%88%87%E7%95%B0%E5%B8%B8","target":"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8","text":"讓介面易於被使用，不易誤用"}],"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87":[{"source":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","target":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","text":"條款4 確定物件在使用前已經初始化"},{"source":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","target":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","text":"區分介面繼承(interface)和實作繼承(implement)"},{"source":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","target":"/notes/Project/Effective-C++-Series/Item36-Never-redefine-an-inherited-non-virtual-function","text":"Item36 Never redefine an inherited non-virtual function"},{"source":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","target":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","text":"條款7 為多型用途的基礎類別宣告 virtual 解構式"},{"source":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","target":"/notes/Project/Effective-C++-Series/Non-member-Non-friend-Function-%E7%9A%84%E5%B0%81%E8%A3%9D%E5%BA%A6%E5%84%AA%E6%96%BC-Member-Function","text":"Non-member \u0026\u0026 Non-friend Function 的封裝度優於 Member Function"},{"source":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","target":"/notes/Project/Effective-C++-Series/%E7%95%B6%E6%89%80%E6%9C%89%E7%9A%84%E5%8F%83%E6%95%B8%E9%83%BD%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%8E%A1%E7%94%A8-Non-member-Function","text":"當所有的參數都需要型別轉換，採用 Non-member Function"},{"source":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","target":"/notes/Project/Effective-C++-Series/%E7%9B%A1%E5%8F%AF%E8%83%BD%E5%BB%B6%E5%BE%8C%E8%AE%8A%E6%95%B8%E5%AE%9A%E7%BE%A9%E5%BC%8F%E7%9A%84%E5%87%BA%E7%8F%BE%E6%99%82%E9%96%93","text":"盡可能延後變數定義式的出現時間"}],"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8":[{"source":"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8","target":"/notes/Project/Effective-C++-Series/Static-Object","text":"Static Object"}],"/notes/Project/Effective-C++-Series/%E9%81%8B%E7%94%A8%E6%88%90%E5%93%A1%E5%87%BD%E5%BC%8F%E6%A8%A1%E6%9D%BF%E6%8E%A5%E5%8F%97%E6%89%80%E6%9C%89%E7%9B%B8%E5%AE%B9%E7%9A%84%E5%9E%8B%E5%88%A5":[{"source":"/notes/Project/Effective-C++-Series/%E9%81%8B%E7%94%A8%E6%88%90%E5%93%A1%E5%87%BD%E5%BC%8F%E6%A8%A1%E6%9D%BF%E6%8E%A5%E5%8F%97%E6%89%80%E6%9C%89%E7%9B%B8%E5%AE%B9%E7%9A%84%E5%9E%8B%E5%88%A5","target":"/notes/Project/Effective-C++-Series/Template-and-Generic-Programming","text":"Template and Generic Programming"}],"/notes/Project/Effective-C++-Series/%E9%81%BF%E5%85%8D%E5%82%B3%E5%9B%9E-Handles-%E6%8C%87%E5%90%91%E7%89%A9%E4%BB%B6%E7%9A%84-Private-Protected-Member-Data":[{"source":"/notes/Project/Effective-C++-Series/%E9%81%BF%E5%85%8D%E5%82%B3%E5%9B%9E-Handles-%E6%8C%87%E5%90%91%E7%89%A9%E4%BB%B6%E7%9A%84-Private-Protected-Member-Data","target":"/notes/Project/Effective-C++-Series/%E6%89%93%E7%A0%B4-Constness-%E9%99%90%E5%88%B6","text":"打破 Constness 限制#Physical Constness"},{"source":"/notes/Project/Effective-C++-Series/%E9%81%BF%E5%85%8D%E5%82%B3%E5%9B%9E-Handles-%E6%8C%87%E5%90%91%E7%89%A9%E4%BB%B6%E7%9A%84-Private-Protected-Member-Data","target":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","text":"Effective C++ Outline#條款3 盡可能使用 const"}],"/notes/Project/Effective-C++-Series/%E9%97%9C%E9%8D%B5%E5%AD%97-typename-%E5%9C%A8-Template-%E4%B8%AD%E7%9A%84%E6%84%8F%E6%B6%B5":[{"source":"/notes/Project/Effective-C++-Series/%E9%97%9C%E9%8D%B5%E5%AD%97-typename-%E5%9C%A8-Template-%E4%B8%AD%E7%9A%84%E6%84%8F%E6%B6%B5","target":"/notes/Project/Effective-C++-Series/typedef-and-using","text":"typedef and using"}],"/notes/Project/Effective-C++-Series/%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%99%82%E8%AB%8B%E7%82%BA%E6%A8%A1%E6%9D%BF%E5%AE%9A%E7%BE%A9%E9%9D%9E%E6%88%90%E5%93%A1%E5%87%BD%E5%BC%8F":[{"source":"/notes/Project/Effective-C++-Series/%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%99%82%E8%AB%8B%E7%82%BA%E6%A8%A1%E6%9D%BF%E5%AE%9A%E7%BE%A9%E9%9D%9E%E6%88%90%E5%93%A1%E5%87%BD%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/%E7%95%B6%E6%89%80%E6%9C%89%E7%9A%84%E5%8F%83%E6%95%B8%E9%83%BD%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%8E%A1%E7%94%A8-Non-member-Function","text":"當所有的參數都需要型別轉換，採用 Non-member Function"}],"/notes/Project/Effective-C++-Series/%E9%9D%9C%E6%85%8B%E7%B6%81%E5%AE%9A-statically-bound-%E8%88%87%E5%8B%95%E6%85%8B%E7%B6%81%E5%AE%9A-dynamically-bound":[{"source":"/notes/Project/Effective-C++-Series/%E9%9D%9C%E6%85%8B%E7%B6%81%E5%AE%9A-statically-bound-%E8%88%87%E5%8B%95%E6%85%8B%E7%B6%81%E5%AE%9A-dynamically-bound","target":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","text":"絕不重新定義繼承來的 Non-virtual Function"},{"source":"/notes/Project/Effective-C++-Series/%E9%9D%9C%E6%85%8B%E7%B6%81%E5%AE%9A-statically-bound-%E8%88%87%E5%8B%95%E6%85%8B%E7%B6%81%E5%AE%9A-dynamically-bound","target":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Non-Virtual-Interface-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Template-Method-Pattern","text":"NVI"}],"/notes/Project/Effective-C++-Series/Array-As-an-Argument":[{"source":"/notes/Project/Effective-C++-Series/Array-As-an-Argument","target":"/notes/Project/Effective-C++-Series/Item15-constexpr","text":"Item15 constexpr"},{"source":"/notes/Project/Effective-C++-Series/Array-As-an-Argument","target":"/notes/Project/Effective-C++-Series/Modern-C++-noexcept","text":"Modern C++ noexcept"}],"/notes/Project/Effective-C++-Series/Const-in-C++":[{"source":"/notes/Project/Effective-C++-Series/Const-in-C++","target":"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8","text":"讓介面易於被使用，不易誤用#Return Const Value"},{"source":"/notes/Project/Effective-C++-Series/Const-in-C++","target":"/notes/Project/Effective-C++-Series/Const-member-function","text":"Const member function"},{"source":"/notes/Project/Effective-C++-Series/Const-in-C++","target":"/notes/Project/Effective-C++-Series/%E6%89%93%E7%A0%B4-Constness-%E9%99%90%E5%88%B6","text":"打破 Constness 限制"}],"/notes/Project/Effective-C++-Series/Default-Generated-Functions":[{"source":"/notes/Project/Effective-C++-Series/Default-Generated-Functions","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","text":"為多型用途的基礎類別宣告 virtual 解構式"},{"source":"/notes/Project/Effective-C++-Series/Default-Generated-Functions","target":"/notes/Project/Effective-C++-Series/Copying-Function","text":"Copying Function"}],"/notes/Project/Effective-C++-Series/Effective-C++-Outline":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E4%BB%A5-Const-%E5%8F%96%E4%BB%A3%E4%BD%BF%E7%94%A8-Define","text":"以 Const 取代使用 Define"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/The-definition-and-declaration-of-static-const","text":"The definition and declaration of static const"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/enum-hack","text":"enum hack"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Const-in-C++","text":"Const in C++"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Member-Initialization-List","text":"Member Initialization List"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Identify-Initialization-and-Assignment","text":"Identify Initialization and Assignment"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Static-Object","text":"Static Object"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E5%BB%BA%E6%A7%8B%E5%92%8C%E8%A7%A3%E6%A7%8B%E5%BC%8F%E6%98%AF-inline-%E7%9A%84%E7%B3%9F%E7%B3%95%E4%BA%BA%E9%81%B8","text":"建構和解構式是 inline 的糟糕人選"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Default-Generated-Functions","text":"Default Generated Functions"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Deleted-Function","text":"Deleted Function"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","text":"為多型用途的基礎類別宣告 virtual 解構式"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E8%A7%A3%E6%A7%8B%E5%BC%8F%E8%88%87%E7%95%B0%E5%B8%B8","text":"解構式與異常"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Virtual-Function","text":"Virtual Function"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Item54-Familiarize-yourself-with-the-standard-library-including-TR1","text":"Item54 Familiarize yourself with the standard library including TR1"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Copying-function","text":"Copying function"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Smart-Pointer","text":"Smart Pointer"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Mutex","text":"Mutex"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Smart-Pointer","text":"Smart Pointer"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E4%BB%80%E9%BA%BC%E8%A6%81%E7%94%A8%E7%8D%A8%E7%AB%8B%E5%8F%A5%E5%B0%87%E7%89%A9%E4%BB%B6%E6%94%BE%E5%85%A5-Smart-Pointer","text":"為什麼要用獨立句將物件放入 Smart Pointer"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8","text":"讓介面易於被使用，不易誤用"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","text":"設計新 Class 的準則"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E6%80%9D%E7%B6%AD%E8%AA%A4%E5%8D%80-%E7%89%A9%E4%BB%B6%E5%BE%88%E5%B0%8F%E5%B0%B1%E5%8F%AF%E4%BB%A5-Pass-By-Value","text":"思維誤區-物件很小就可以 Pass By Value"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Static-Object","text":"Static Object"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Protected-%E8%88%87-Public-%E9%83%BD%E6%98%AF%E4%BD%8E%E5%B0%81%E8%A3%9D%E5%BA%A6%E7%9A%84-Access-Level","text":"Protected 與 Public 都是低封裝度的 Access Level"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Non-member-Non-friend-Function-%E7%9A%84%E5%B0%81%E8%A3%9D%E5%BA%A6%E5%84%AA%E6%96%BC-Member-Function","text":"Non-member \u0026\u0026 Non-friend Function 的封裝度優於 Member Function"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%99%82%E8%AB%8B%E7%82%BA%E6%A8%A1%E6%9D%BF%E5%AE%9A%E7%BE%A9%E9%9D%9E%E6%88%90%E5%93%A1%E5%87%BD%E5%BC%8F","text":"需要型別轉換時請為模板定義非成員函式"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%95%B6%E6%89%80%E6%9C%89%E7%9A%84%E5%8F%83%E6%95%B8%E9%83%BD%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%8E%A1%E7%94%A8-Non-member-Function","text":"當所有的參數都需要型別轉換，採用 Non-member Function"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Swap-and-pimpl","text":"Swap and pimpl"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%9B%A1%E5%8F%AF%E8%83%BD%E5%BB%B6%E5%BE%8C%E8%AE%8A%E6%95%B8%E5%AE%9A%E7%BE%A9%E5%BC%8F%E7%9A%84%E5%87%BA%E7%8F%BE%E6%99%82%E9%96%93","text":"盡可能延後變數定義式的出現時間"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E5%B0%91%E5%81%9A%E8%BD%89%E5%9E%8B%E5%8B%95%E4%BD%9CMinimize-casting","text":"少做轉型動作(Minimize casting)"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E9%81%BF%E5%85%8D%E5%82%B3%E5%9B%9E-Handles-%E6%8C%87%E5%90%91%E7%89%A9%E4%BB%B6%E7%9A%84-Private-Protected-Member-Data","text":"避免傳回 Handles 指向物件的 Private \u0026 Protected Member Data"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E7%95%B0%E5%B8%B8%E5%AE%89%E5%85%A8-Exception-safe-%E8%80%8C%E5%8A%AA%E5%8A%9B%E6%98%AF%E5%80%BC%E5%BE%97%E7%9A%84","text":"為異常安全 (Exception-safe) 而努力是值得的"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","text":"了解 Inline 的裡裡外外"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E5%B0%87%E6%AA%94%E6%A1%88%E7%9A%84%E7%B7%A8%E8%AD%AF%E4%BE%9D%E5%AD%98%E9%97%9C%E4%BF%82%E9%99%8D%E5%88%B0%E6%9C%80%E4%BD%8E","text":"將檔案的編譯依存關係降到最低"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","text":"確保 Derived Class 和 Base Class 之間必然保持 Is-a 關係"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","text":"審慎的使用 Private 繼承"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E4%BD%BF%E7%94%A8%E9%97%9C%E9%8D%B5%E5%AD%97-using-%E8%AE%93%E7%89%B9%E5%AE%9A-function-%E5%9C%A8-Scope-%E5%85%A7%E5%8F%AF%E8%A6%8B","text":"使用關鍵字 using 讓特定 function 在 Scope 內可見"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/override","text":"override"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","text":"區分介面繼承(interface)和實作繼承(implement)"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Non-Virtual-Interface-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Template-Method-Pattern","text":"藉由 Non-Virtual Interface 手法實現 Template Method Pattern"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Function-Pointer-%E5%92%8C-tr1-function-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Strategy-Pattern","text":"藉由 Function Pointer 和 tr1 function 手法實現 Strategy Pattern"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","text":"絕不重新定義繼承來的 Non-virtual Function"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E9%9D%9C%E6%85%8B%E7%B6%81%E5%AE%9A-statically-bound-%E8%88%87%E5%8B%95%E6%85%8B%E7%B6%81%E5%AE%9A-dynamically-bound","text":"靜態綁定 (statically bound) 與動態綁定 (dynamically bound)"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E5%AE%9A-Composition-%E5%A1%91%E9%80%A0%E7%9A%84%E6%98%AF-Has-A%E9%97%9C%E4%BF%82-%E6%88%96-%E6%A0%B9%E6%93%9A%E6%9F%90%E7%89%A9%E5%AF%A6%E4%BD%9C%E7%9A%84%E9%97%9C%E4%BF%82","text":"確定 Composition 塑造的是 'Has-A'關係 或 '根據某物實作'的關係"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","text":"審慎的使用 Private 繼承"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E5%A4%9A%E9%87%8D%E7%B9%BC%E6%89%BF-Multiple-Inheritance-MI","text":"多重繼承 (Multiple Inheritance, MI)"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Template-%E7%9A%84%E7%94%A8%E9%80%94","text":"Template 的用途"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Template-%E8%88%87%E9%9A%B1%E5%BC%8F%E4%BB%8B%E9%9D%A2","text":"Template 與隱式介面"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E9%97%9C%E9%8D%B5%E5%AD%97-typename-%E5%9C%A8-Template-%E4%B8%AD%E7%9A%84%E6%84%8F%E6%B6%B5","text":"關鍵字 typename 在 Template 中的意涵"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","text":"了解如何在 Template 中指涉 Base Class 成員"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Template-%E5%B8%B6%E4%BE%86%E7%9A%84%E7%A8%8B%E5%BC%8F%E7%A2%BC%E8%86%A8%E8%84%B9","text":"Template 帶來的程式碼膨脹"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E9%81%8B%E7%94%A8%E6%88%90%E5%93%A1%E5%87%BD%E5%BC%8F%E6%A8%A1%E6%9D%BF%E6%8E%A5%E5%8F%97%E6%89%80%E6%9C%89%E7%9B%B8%E5%AE%B9%E7%9A%84%E5%9E%8B%E5%88%A5","text":"運用成員函式模板，接受所有相容的型別"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%99%82%E8%AB%8B%E7%82%BA%E6%A8%A1%E6%9D%BF%E5%AE%9A%E7%BE%A9%E9%9D%9E%E6%88%90%E5%93%A1%E5%87%BD%E5%BC%8F","text":"需要型別轉換時請為模板定義非成員函式"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Item54-Familiarize-yourself-with-the-standard-library-including-TR1","text":"Item54 Familiarize yourself with the standard library including TR1"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Item55-Familiarize-yourself-with-Boost","text":"Item55 Familiarize yourself with Boost"}],"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline":[{"source":"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline","target":"/notes/Project/Effective-C++-Series/Template-ParamType-deduction","text":"Template ParamType deduction"},{"source":"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline","target":"/notes/Project/Effective-C++-Series/typedef-and-using","text":"typedef and using"},{"source":"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline","target":"/notes/Project/Effective-C++-Series/override","text":"override"},{"source":"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline","target":"/notes/Project/Effective-C++-Series/Modern-C++-noexcept","text":"Modern C++ noexcept"},{"source":"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline","target":"/notes/Project/Effective-C++-Series/Item15-constexpr","text":"Item15 constexpr"},{"source":"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline","target":"/notes/Project/Effective-C++-Series/C++11-std-function","text":"C++11 std function"}],"/notes/Project/Effective-C++-Series/Impure-Virtual-Function":[{"source":"/notes/Project/Effective-C++-Series/Impure-Virtual-Function","target":"/notes/Project/Effective-C++-Series/Pure-Virtual-Function","text":"Pure Virtual Function"}],"/notes/Project/Effective-C++-Series/Member-Function-Template":[{"source":"/notes/Project/Effective-C++-Series/Member-Function-Template","target":"/notes/Project/Effective-C++-Series/Default-Generated-Functions","text":"Default Generated Functions"}],"/notes/Project/Effective-C++-Series/Member-Initialization-List":[{"source":"/notes/Project/Effective-C++-Series/Member-Initialization-List","target":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","text":"Effective C++ Outline#條款5 了解 C++默默編寫並呼叫哪些函式"}],"/notes/Project/Effective-C++-Series/Modern-C++-noexcept":[{"source":"/notes/Project/Effective-C++-Series/Modern-C++-noexcept","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E7%95%B0%E5%B8%B8%E5%AE%89%E5%85%A8-Exception-safe-%E8%80%8C%E5%8A%AA%E5%8A%9B%E6%98%AF%E5%80%BC%E5%BE%97%E7%9A%84","text":"為異常安全 (Exception-safe) 而努力是值得的"}],"/notes/Project/Effective-C++-Series/Non-member-Non-friend-Function-%E7%9A%84%E5%B0%81%E8%A3%9D%E5%BA%A6%E5%84%AA%E6%96%BC-Member-Function":[{"source":"/notes/Project/Effective-C++-Series/Non-member-Non-friend-Function-%E7%9A%84%E5%B0%81%E8%A3%9D%E5%BA%A6%E5%84%AA%E6%96%BC-Member-Function","target":"/notes/Project/Effective-C++-Series/Friend-Function","text":"Friend Function"},{"source":"/notes/Project/Effective-C++-Series/Non-member-Non-friend-Function-%E7%9A%84%E5%B0%81%E8%A3%9D%E5%BA%A6%E5%84%AA%E6%96%BC-Member-Function","target":"/notes/Project/Effective-C++-Series/Protected-%E8%88%87-Public-%E9%83%BD%E6%98%AF%E4%BD%8E%E5%B0%81%E8%A3%9D%E5%BA%A6%E7%9A%84-Access-Level","text":"Protected 與 Public 都是低封裝度的 Access Level"}],"/notes/Project/Effective-C++-Series/ParamType-%E6%98%AF-Universal-Reference":[{"source":"/notes/Project/Effective-C++-Series/ParamType-%E6%98%AF-Universal-Reference","target":"/notes/Project/Effective-C++-Series/Item24-Distinguish-universal-references-from-rvalue-references","text":"Item24 Distinguish universal references from rvalue references"},{"source":"/notes/Project/Effective-C++-Series/ParamType-%E6%98%AF-Universal-Reference","target":"/notes/Project/Effective-C++-Series/ParamType-%E6%98%AF-Pointer-%E6%88%96-Reference%E4%BD%86%E4%B8%8D%E6%98%AF-Universal-Reference","text":"ParamType 是 Pointer 或 Reference，但不是 Universal Reference"}],"/notes/Project/Effective-C++-Series/Pure-Virtual-Destructor":[{"source":"/notes/Project/Effective-C++-Series/Pure-Virtual-Destructor","target":"/notes/Project/Effective-C++-Series/Pure-Virtual-Function","text":"Pure Virtual Function"}],"/notes/Project/Effective-C++-Series/Smart-Pointer":[{"source":"/notes/Project/Effective-C++-Series/Smart-Pointer","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","text":"為多型用途的基礎類別宣告 virtual 解構式"},{"source":"/notes/Project/Effective-C++-Series/Smart-Pointer","target":"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8","text":"讓介面易於被使用，不易誤用"}],"/notes/Project/Effective-C++-Series/Static-Object":[{"source":"/notes/Project/Effective-C++-Series/Static-Object","target":"/notes/Project/Effective-C++-Series/Translation-Unit","text":"Translation Unit"},{"source":"/notes/Project/Effective-C++-Series/Static-Object","target":"/notes/Project/Effective-C++-Series/Translation-Unit","text":"Translation Unit"},{"source":"/notes/Project/Effective-C++-Series/Static-Object","target":"/notes/Project/Effective-C++-Series/Implicit-TemplateInstantiation","text":"Implicit TemplateInstantiation"},{"source":"/notes/Project/Effective-C++-Series/Static-Object","target":"/notes/Project/Effective-C++-Series/Singleton","text":"Singleton"},{"source":"/notes/Project/Effective-C++-Series/Static-Object","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","text":"了解 Inline 的裡裡外外"}],"/notes/Project/Effective-C++-Series/Swap-and-pimpl":[{"source":"/notes/Project/Effective-C++-Series/Swap-and-pimpl","target":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","text":"pimpl idiom (pointer to implementation)"},{"source":"/notes/Project/Effective-C++-Series/Swap-and-pimpl","target":"/notes/Project/Effective-C++-Series/Total-Template-Specialization","text":"Total Template Specialization"}],"/notes/Project/Effective-C++-Series/Template-%E5%B8%B6%E4%BE%86%E7%9A%84%E7%A8%8B%E5%BC%8F%E7%A2%BC%E8%86%A8%E8%84%B9":[{"source":"/notes/Project/Effective-C++-Series/Template-%E5%B8%B6%E4%BE%86%E7%9A%84%E7%A8%8B%E5%BC%8F%E7%A2%BC%E8%86%A8%E8%84%B9","target":"/notes/Project/Effective-C++-Series/%E7%B9%BC%E6%89%BF%E6%99%82%E7%9A%84%E5%90%8D%E7%A8%B1%E9%81%AE%E6%8E%A9%E8%A1%8C%E7%82%BA","text":"繼承時的名稱遮掩行為"},{"source":"/notes/Project/Effective-C++-Series/Template-%E5%B8%B6%E4%BE%86%E7%9A%84%E7%A8%8B%E5%BC%8F%E7%A2%BC%E8%86%A8%E8%84%B9","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","text":"了解如何在 Template 中指涉 Base Class 成員"},{"source":"/notes/Project/Effective-C++-Series/Template-%E5%B8%B6%E4%BE%86%E7%9A%84%E7%A8%8B%E5%BC%8F%E7%A2%BC%E8%86%A8%E8%84%B9","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","text":"了解 Inline 的裡裡外外"}],"/notes/Project/Effective-C++-Series/Template-%E8%88%87%E9%9A%B1%E5%BC%8F%E4%BB%8B%E9%9D%A2":[{"source":"/notes/Project/Effective-C++-Series/Template-%E8%88%87%E9%9A%B1%E5%BC%8F%E4%BB%8B%E9%9D%A2","target":"/notes/Project/Effective-C++-Series/operator-overloading","text":"operator overloading"}],"/notes/Project/Effective-C++-Series/Template-ParamType-deduction":[{"source":"/notes/Project/Effective-C++-Series/Template-ParamType-deduction","target":"/notes/Project/Effective-C++-Series/ParamType-%E6%98%AF-Pointer-%E6%88%96-Reference-%E4%BD%86%E4%B8%8D%E6%98%AF-Universal-Reference","text":"ParamType 是 Pointer 或 Reference 但不是 Universal Reference"},{"source":"/notes/Project/Effective-C++-Series/Template-ParamType-deduction","target":"/notes/Project/Effective-C++-Series/ParamType-%E6%98%AF-Universal-Reference","text":"ParamType 是 Universal Reference"},{"source":"/notes/Project/Effective-C++-Series/Template-ParamType-deduction","target":"/notes/Project/Effective-C++-Series/ParamType-%E9%9D%9E-Reference-%E6%88%96-Pointer","text":"ParamType 非 Reference 或 Pointer"},{"source":"/notes/Project/Effective-C++-Series/Template-ParamType-deduction","target":"/notes/Project/Effective-C++-Series/Array-As-an-Argument","text":"Array As an Argument"},{"source":"/notes/Project/Effective-C++-Series/Template-ParamType-deduction","target":"/notes/Project/Effective-C++-Series/Function-As-an-Argument","text":"Function As an Argument"}],"/notes/Project/Effective-C++-Series/Template-and-Generic-Programming":[{"source":"/notes/Project/Effective-C++-Series/Template-and-Generic-Programming","target":"/notes/Project/Effective-C++-Series/Member-Function-Template","text":"Member Function Template"}],"/notes/Project/Effective-C++-Series/Total-Template-Specialization":[{"source":"/notes/Project/Effective-C++-Series/Total-Template-Specialization","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","text":"了解如何在 Template 中指涉 Base Class 成員"}],"/notes/Project/Effective-C++-Series/Virtual-Function":[{"source":"/notes/Project/Effective-C++-Series/Virtual-Function","target":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","text":"區分介面繼承(interface)和實作繼承(implement)"},{"source":"/notes/Project/Effective-C++-Series/Virtual-Function","target":"/notes/Project/Effective-C++-Series/%E5%B0%91%E5%81%9A%E8%BD%89%E5%9E%8B%E5%8B%95%E4%BD%9CMinimize-casting","text":"少做轉型動作(Minimize casting)"}],"/notes/Project/Effective-C++-Series/non-member-non-friend-function":[{"source":"/notes/Project/Effective-C++-Series/non-member-non-friend-function","target":"/notes/Project/Effective-C++-Series/Non-member-Non-friend-Function-%E7%9A%84%E5%B0%81%E8%A3%9D%E5%BA%A6%E5%84%AA%E6%96%BC-Member-Function","text":"Non-member \u0026\u0026 Non-friend Function 的封裝度優於 Member Function"}],"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation":[{"source":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","target":"/notes/Project/Effective-C++-Series/%E7%B7%A8%E8%AD%AF%E4%BE%9D%E5%AD%98-%E5%AE%A3%E5%91%8A%E5%BC%8F%E5%AE%9A%E7%BE%A9%E5%BC%8F%E8%88%87%E5%AF%A6%E4%BD%9C%E7%B4%B0%E7%AF%80","text":"編譯依存-宣告式、定義式與實作細節"},{"source":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","target":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","text":"區分介面繼承(interface)和實作繼承(implement)"},{"source":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","target":"/notes/Project/Effective-C++-Series/Pure-Virtual-Function","text":"Pure Virtual Function"},{"source":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","target":"/notes/Project/Effective-C++-Series/%E5%B7%A5%E5%BB%A0%E5%87%BD%E5%BC%8F-Factory-Function","text":"工廠函式 (Factory Function)"},{"source":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","text":"為多型用途的基礎類別宣告 virtual 解構式"},{"source":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","target":"/notes/Project/Effective-C++-Series/%E4%B8%8D%E8%A6%81%E7%82%BA%E9%9D%9E%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84-Base-Class-%E5%AE%A3%E5%91%8A-Virtual-Function","text":"不要為非多型用途的 Base Class 宣告 Virtual Function"},{"source":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","text":"了解 Inline 的裡裡外外#向 Compiler 發出申請"}],"/notes/Resource/MOCs/C++-Resources":[{"source":"/notes/Resource/MOCs/C++-Resources","target":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","text":"Effective C++ Outline"},{"source":"/notes/Resource/MOCs/C++-Resources","target":"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline","text":"Effective modern C++ Outline"}],"/notes/Resource/MOCs/Design-Pattern":[{"source":"/notes/Resource/MOCs/Design-Pattern","target":"/notes/Project/Effective-C++-Series/Template-Method","text":"Template Method"},{"source":"/notes/Resource/MOCs/Design-Pattern","target":"/notes/Project/Effective-C++-Series/Classic-Strategy-Pattern","text":"Classic Strategy Pattern"}]},"backlinks":{"/notes":[{"source":"/","target":"/notes","text":"notes"}],"/notes/Area/Obsidian/Obsidian-Map-View":[{"source":"/notes/Area/Obsidian/Obsidian-Plugins","target":"/notes/Area/Obsidian/Obsidian-Map-View","text":"Obsidian Map View"}],"/notes/Area/Quartz/Publish-Quartz-to-Github-Page":[{"source":"/notes/Area/Quartz/%E4%BD%BF%E7%94%A8-Quartz-%E5%BB%BA%E7%AB%8B%E9%83%A8%E8%90%BD%E6%A0%BC","target":"/notes/Area/Quartz/Publish-Quartz-to-Github-Page","text":"Publish Quartz to Github Page"}],"/notes/Project/Effective-C++-Series/%E4%B8%8D%E8%A6%81%E7%82%BA%E9%9D%9E%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84-Base-Class-%E5%AE%A3%E5%91%8A-Virtual-Function":[{"source":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","target":"/notes/Project/Effective-C++-Series/%E4%B8%8D%E8%A6%81%E7%82%BA%E9%9D%9E%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84-Base-Class-%E5%AE%A3%E5%91%8A-Virtual-Function","text":"不要為非多型用途的 Base Class 宣告 Virtual Function"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/%E4%B8%8D%E8%A6%81%E7%82%BA%E9%9D%9E%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84-Base-Class-%E5%AE%A3%E5%91%8A-Virtual-Function","text":"不要為非多型用途的 Base Class 宣告 Virtual Function"},{"source":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Non-Virtual-Interface-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Template-Method-Pattern","target":"/notes/Project/Effective-C++-Series/%E4%B8%8D%E8%A6%81%E7%82%BA%E9%9D%9E%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84-Base-Class-%E5%AE%A3%E5%91%8A-Virtual-Function","text":"不要為非多型用途的 Base Class 宣告 Virtual Function"}],"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","text":"了解如何在 Template 中指涉 Base Class 成員"},{"source":"/notes/Project/Effective-C++-Series/Template-%E5%B8%B6%E4%BE%86%E7%9A%84%E7%A8%8B%E5%BC%8F%E7%A2%BC%E8%86%A8%E8%84%B9","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","text":"了解如何在 Template 中指涉 Base Class 成員"},{"source":"/notes/Project/Effective-C++-Series/Total-Template-Specialization","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","text":"了解如何在 Template 中指涉 Base Class 成員"},{"source":"/notes/Project/Effective-C++-Series/%E4%BD%BF%E7%94%A8%E9%97%9C%E9%8D%B5%E5%AD%97-using-%E8%AE%93%E7%89%B9%E5%AE%9A-function-%E5%9C%A8-Scope-%E5%85%A7%E5%8F%AF%E8%A6%8B","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","text":"了解如何在 Template 中指涉 Base Class 成員"}],"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","text":"了解 Inline 的裡裡外外"},{"source":"/notes/Project/Effective-C++-Series/Static-Object","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","text":"了解 Inline 的裡裡外外"},{"source":"/notes/Project/Effective-C++-Series/Template-%E5%B8%B6%E4%BE%86%E7%9A%84%E7%A8%8B%E5%BC%8F%E7%A2%BC%E8%86%A8%E8%84%B9","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","text":"了解 Inline 的裡裡外外"},{"source":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","text":"了解 Inline 的裡裡外外#向 Compiler 發出申請"},{"source":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E5%AE%9A-Composition-%E5%A1%91%E9%80%A0%E7%9A%84%E6%98%AF-Has-A%E9%97%9C%E4%BF%82-%E6%88%96-%E6%A0%B9%E6%93%9A%E6%9F%90%E7%89%A9%E5%AF%A6%E4%BD%9C%E7%9A%84%E9%97%9C%E4%BF%82","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","text":"了解 Inline 的裡裡外外"}],"/notes/Project/Effective-C++-Series/%E4%BB%A5-Const-%E5%8F%96%E4%BB%A3%E4%BD%BF%E7%94%A8-Define":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E4%BB%A5-Const-%E5%8F%96%E4%BB%A3%E4%BD%BF%E7%94%A8-Define","text":"以 Const 取代使用 Define"}],"/notes/Project/Effective-C++-Series/%E4%BD%BF%E7%94%A8%E9%97%9C%E9%8D%B5%E5%AD%97-using-%E8%AE%93%E7%89%B9%E5%AE%9A-function-%E5%9C%A8-Scope-%E5%85%A7%E5%8F%AF%E8%A6%8B":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E4%BD%BF%E7%94%A8%E9%97%9C%E9%8D%B5%E5%AD%97-using-%E8%AE%93%E7%89%B9%E5%AE%9A-function-%E5%9C%A8-Scope-%E5%85%A7%E5%8F%AF%E8%A6%8B","text":"使用關鍵字 using 讓特定 function 在 Scope 內可見"},{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","target":"/notes/Project/Effective-C++-Series/%E4%BD%BF%E7%94%A8%E9%97%9C%E9%8D%B5%E5%AD%97-using-%E8%AE%93%E7%89%B9%E5%AE%9A-function-%E5%9C%A8-Scope-%E5%85%A7%E5%8F%AF%E8%A6%8B","text":"使用關鍵字 using 讓特定 function 在 Scope 內可見"}],"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","text":"區分介面繼承(interface)和實作繼承(implement)"},{"source":"/notes/Project/Effective-C++-Series/Virtual-Function","target":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","text":"區分介面繼承(interface)和實作繼承(implement)"},{"source":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","target":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","text":"區分介面繼承(interface)和實作繼承(implement)"},{"source":"/notes/Project/Effective-C++-Series/%E5%B0%91%E5%81%9A%E8%BD%89%E5%9E%8B%E5%8B%95%E4%BD%9CMinimize-casting","target":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","text":"區分介面繼承(interface)和實作繼承(implement)"},{"source":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","target":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","text":"區分介面繼承(interface)和實作繼承(implement)"},{"source":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","target":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","text":"區分介面繼承(interface)和實作繼承(implement)"}],"/notes/Project/Effective-C++-Series/%E5%A4%9A%E9%87%8D%E7%B9%BC%E6%89%BF-Multiple-Inheritance-MI":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E5%A4%9A%E9%87%8D%E7%B9%BC%E6%89%BF-Multiple-Inheritance-MI","text":"多重繼承 (Multiple Inheritance, MI)"}],"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","text":"審慎的使用 Private 繼承"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","text":"審慎的使用 Private 繼承"},{"source":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","target":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","text":"審慎的使用 Private 繼承"}],"/notes/Project/Effective-C++-Series/%E5%B0%87%E6%AA%94%E6%A1%88%E7%9A%84%E7%B7%A8%E8%AD%AF%E4%BE%9D%E5%AD%98%E9%97%9C%E4%BF%82%E9%99%8D%E5%88%B0%E6%9C%80%E4%BD%8E":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E5%B0%87%E6%AA%94%E6%A1%88%E7%9A%84%E7%B7%A8%E8%AD%AF%E4%BE%9D%E5%AD%98%E9%97%9C%E4%BF%82%E9%99%8D%E5%88%B0%E6%9C%80%E4%BD%8E","text":"將檔案的編譯依存關係降到最低"},{"source":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","target":"/notes/Project/Effective-C++-Series/%E5%B0%87%E6%AA%94%E6%A1%88%E7%9A%84%E7%B7%A8%E8%AD%AF%E4%BE%9D%E5%AD%98%E9%97%9C%E4%BF%82%E9%99%8D%E5%88%B0%E6%9C%80%E4%BD%8E","text":"將檔案的編譯依存關係降到最低"}],"/notes/Project/Effective-C++-Series/%E5%B0%91%E5%81%9A%E8%BD%89%E5%9E%8B%E5%8B%95%E4%BD%9CMinimize-casting":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E5%B0%91%E5%81%9A%E8%BD%89%E5%9E%8B%E5%8B%95%E4%BD%9CMinimize-casting","text":"少做轉型動作(Minimize casting)"},{"source":"/notes/Project/Effective-C++-Series/Virtual-Function","target":"/notes/Project/Effective-C++-Series/%E5%B0%91%E5%81%9A%E8%BD%89%E5%9E%8B%E5%8B%95%E4%BD%9CMinimize-casting","text":"少做轉型動作(Minimize casting)"}],"/notes/Project/Effective-C++-Series/%E5%B7%A5%E5%BB%A0%E5%87%BD%E5%BC%8F-Factory-Function":[{"source":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","target":"/notes/Project/Effective-C++-Series/%E5%B7%A5%E5%BB%A0%E5%87%BD%E5%BC%8F-Factory-Function","text":"工廠函式 (Factory Function)"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/%E5%B7%A5%E5%BB%A0%E5%87%BD%E5%BC%8F-Factory-Function","text":"工廠函式 (Factory Function)"}],"/notes/Project/Effective-C++-Series/%E5%BB%BA%E6%A7%8B%E5%92%8C%E8%A7%A3%E6%A7%8B%E5%BC%8F%E6%98%AF-inline-%E7%9A%84%E7%B3%9F%E7%B3%95%E4%BA%BA%E9%81%B8":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E5%BB%BA%E6%A7%8B%E5%92%8C%E8%A7%A3%E6%A7%8B%E5%BC%8F%E6%98%AF-inline-%E7%9A%84%E7%B3%9F%E7%B3%95%E4%BA%BA%E9%81%B8","text":"建構和解構式是 inline 的糟糕人選"},{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","target":"/notes/Project/Effective-C++-Series/%E5%BB%BA%E6%A7%8B%E5%92%8C%E8%A7%A3%E6%A7%8B%E5%BC%8F%E6%98%AF-inline-%E7%9A%84%E7%B3%9F%E7%B3%95%E4%BA%BA%E9%81%B8","text":"建構和解構式是 inline 的糟糕人選"}],"/notes/Project/Effective-C++-Series/%E6%80%9D%E7%B6%AD%E8%AA%A4%E5%8D%80-%E7%89%A9%E4%BB%B6%E5%BE%88%E5%B0%8F%E5%B0%B1%E5%8F%AF%E4%BB%A5-Pass-By-Value":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E6%80%9D%E7%B6%AD%E8%AA%A4%E5%8D%80-%E7%89%A9%E4%BB%B6%E5%BE%88%E5%B0%8F%E5%B0%B1%E5%8F%AF%E4%BB%A5-Pass-By-Value","text":"思維誤區-物件很小就可以 Pass By Value"}],"/notes/Project/Effective-C++-Series/%E6%89%93%E7%A0%B4-Constness-%E9%99%90%E5%88%B6":[{"source":"/notes/Project/Effective-C++-Series/Const-in-C++","target":"/notes/Project/Effective-C++-Series/%E6%89%93%E7%A0%B4-Constness-%E9%99%90%E5%88%B6","text":"打破 Constness 限制"},{"source":"/notes/Project/Effective-C++-Series/%E9%81%BF%E5%85%8D%E5%82%B3%E5%9B%9E-Handles-%E6%8C%87%E5%90%91%E7%89%A9%E4%BB%B6%E7%9A%84-Private-Protected-Member-Data","target":"/notes/Project/Effective-C++-Series/%E6%89%93%E7%A0%B4-Constness-%E9%99%90%E5%88%B6","text":"打破 Constness 限制#Physical Constness"}],"/notes/Project/Effective-C++-Series/%E7%82%BA%E4%BB%80%E9%BA%BC%E8%A6%81%E7%94%A8%E7%8D%A8%E7%AB%8B%E5%8F%A5%E5%B0%87%E7%89%A9%E4%BB%B6%E6%94%BE%E5%85%A5-Smart-Pointer":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E4%BB%80%E9%BA%BC%E8%A6%81%E7%94%A8%E7%8D%A8%E7%AB%8B%E5%8F%A5%E5%B0%87%E7%89%A9%E4%BB%B6%E6%94%BE%E5%85%A5-Smart-Pointer","text":"為什麼要用獨立句將物件放入 Smart Pointer"}],"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F":[{"source":"/notes/Project/Effective-C++-Series/Default-Generated-Functions","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","text":"為多型用途的基礎類別宣告 virtual 解構式"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","text":"為多型用途的基礎類別宣告 virtual 解構式"},{"source":"/notes/Project/Effective-C++-Series/Smart-Pointer","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","text":"為多型用途的基礎類別宣告 virtual 解構式"},{"source":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","text":"為多型用途的基礎類別宣告 virtual 解構式"},{"source":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","text":"為多型用途的基礎類別宣告 virtual 解構式"}],"/notes/Project/Effective-C++-Series/%E7%82%BA%E7%95%B0%E5%B8%B8%E5%AE%89%E5%85%A8-Exception-safe-%E8%80%8C%E5%8A%AA%E5%8A%9B%E6%98%AF%E5%80%BC%E5%BE%97%E7%9A%84":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E7%95%B0%E5%B8%B8%E5%AE%89%E5%85%A8-Exception-safe-%E8%80%8C%E5%8A%AA%E5%8A%9B%E6%98%AF%E5%80%BC%E5%BE%97%E7%9A%84","text":"為異常安全 (Exception-safe) 而努力是值得的"},{"source":"/notes/Project/Effective-C++-Series/Modern-C++-noexcept","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E7%95%B0%E5%B8%B8%E5%AE%89%E5%85%A8-Exception-safe-%E8%80%8C%E5%8A%AA%E5%8A%9B%E6%98%AF%E5%80%BC%E5%BE%97%E7%9A%84","text":"為異常安全 (Exception-safe) 而努力是值得的"}],"/notes/Project/Effective-C++-Series/%E7%95%B6%E6%89%80%E6%9C%89%E7%9A%84%E5%8F%83%E6%95%B8%E9%83%BD%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%8E%A1%E7%94%A8-Non-member-Function":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%95%B6%E6%89%80%E6%9C%89%E7%9A%84%E5%8F%83%E6%95%B8%E9%83%BD%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%8E%A1%E7%94%A8-Non-member-Function","text":"當所有的參數都需要型別轉換，採用 Non-member Function"},{"source":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","target":"/notes/Project/Effective-C++-Series/%E7%95%B6%E6%89%80%E6%9C%89%E7%9A%84%E5%8F%83%E6%95%B8%E9%83%BD%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%8E%A1%E7%94%A8-Non-member-Function","text":"當所有的參數都需要型別轉換，採用 Non-member Function"},{"source":"/notes/Project/Effective-C++-Series/%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%99%82%E8%AB%8B%E7%82%BA%E6%A8%A1%E6%9D%BF%E5%AE%9A%E7%BE%A9%E9%9D%9E%E6%88%90%E5%93%A1%E5%87%BD%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/%E7%95%B6%E6%89%80%E6%9C%89%E7%9A%84%E5%8F%83%E6%95%B8%E9%83%BD%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%8E%A1%E7%94%A8-Non-member-Function","text":"當所有的參數都需要型別轉換，採用 Non-member Function"}],"/notes/Project/Effective-C++-Series/%E7%9B%A1%E5%8F%AF%E8%83%BD%E5%BB%B6%E5%BE%8C%E8%AE%8A%E6%95%B8%E5%AE%9A%E7%BE%A9%E5%BC%8F%E7%9A%84%E5%87%BA%E7%8F%BE%E6%99%82%E9%96%93":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%9B%A1%E5%8F%AF%E8%83%BD%E5%BB%B6%E5%BE%8C%E8%AE%8A%E6%95%B8%E5%AE%9A%E7%BE%A9%E5%BC%8F%E7%9A%84%E5%87%BA%E7%8F%BE%E6%99%82%E9%96%93","text":"盡可能延後變數定義式的出現時間"},{"source":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","target":"/notes/Project/Effective-C++-Series/%E7%9B%A1%E5%8F%AF%E8%83%BD%E5%BB%B6%E5%BE%8C%E8%AE%8A%E6%95%B8%E5%AE%9A%E7%BE%A9%E5%BC%8F%E7%9A%84%E5%87%BA%E7%8F%BE%E6%99%82%E9%96%93","text":"盡可能延後變數定義式的出現時間"}],"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","text":"確保 Derived Class 和 Base Class 之間必然保持 Is-a 關係"},{"source":"/notes/Project/Effective-C++-Series/%E4%BD%BF%E7%94%A8%E9%97%9C%E9%8D%B5%E5%AD%97-using-%E8%AE%93%E7%89%B9%E5%AE%9A-function-%E5%9C%A8-Scope-%E5%85%A7%E5%8F%AF%E8%A6%8B","target":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","text":"確保 Derived Class 和 Base Class 之間必然保持 Is-a 關係"},{"source":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","target":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","text":"確保 Derived Class 和 Base Class 之間必然保持 Is-a 關係"},{"source":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","target":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","text":"確保 Derived Class 和 Base Class 之間必然保持 Is-a 關係"}],"/notes/Project/Effective-C++-Series/%E7%A2%BA%E5%AE%9A-Composition-%E5%A1%91%E9%80%A0%E7%9A%84%E6%98%AF-Has-A%E9%97%9C%E4%BF%82-%E6%88%96-%E6%A0%B9%E6%93%9A%E6%9F%90%E7%89%A9%E5%AF%A6%E4%BD%9C%E7%9A%84%E9%97%9C%E4%BF%82":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E5%AE%9A-Composition-%E5%A1%91%E9%80%A0%E7%9A%84%E6%98%AF-Has-A%E9%97%9C%E4%BF%82-%E6%88%96-%E6%A0%B9%E6%93%9A%E6%9F%90%E7%89%A9%E5%AF%A6%E4%BD%9C%E7%9A%84%E9%97%9C%E4%BF%82","text":"確定 Composition 塑造的是 'Has-A'關係 或 '根據某物實作'的關係"},{"source":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","target":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E5%AE%9A-Composition-%E5%A1%91%E9%80%A0%E7%9A%84%E6%98%AF-Has-A%E9%97%9C%E4%BF%82-%E6%88%96-%E6%A0%B9%E6%93%9A%E6%9F%90%E7%89%A9%E5%AF%A6%E4%BD%9C%E7%9A%84%E9%97%9C%E4%BF%82","text":"確定 Composition 塑造的是 'Has-A'關係 或 '根據某物實作'的關係"},{"source":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","target":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E5%AE%9A-Composition-%E5%A1%91%E9%80%A0%E7%9A%84%E6%98%AF-Has-A%E9%97%9C%E4%BF%82-%E6%88%96-%E6%A0%B9%E6%93%9A%E6%9F%90%E7%89%A9%E5%AF%A6%E4%BD%9C%E7%9A%84%E9%97%9C%E4%BF%82","text":"確定 Composition 塑造的是 'Has-A'關係 或 '根據某物實作'的關係"}],"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","text":"絕不重新定義繼承來的 Non-virtual Function"},{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","target":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","text":"絕不重新定義繼承來的 Non-virtual Function"},{"source":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","target":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","text":"絕不重新定義繼承來的 Non-virtual Function"},{"source":"/notes/Project/Effective-C++-Series/%E9%9D%9C%E6%85%8B%E7%B6%81%E5%AE%9A-statically-bound-%E8%88%87%E5%8B%95%E6%85%8B%E7%B6%81%E5%AE%9A-dynamically-bound","target":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","text":"絕不重新定義繼承來的 Non-virtual Function"}],"/notes/Project/Effective-C++-Series/%E7%B7%A8%E8%AD%AF%E4%BE%9D%E5%AD%98-%E5%AE%A3%E5%91%8A%E5%BC%8F%E5%AE%9A%E7%BE%A9%E5%BC%8F%E8%88%87%E5%AF%A6%E4%BD%9C%E7%B4%B0%E7%AF%80":[{"source":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","target":"/notes/Project/Effective-C++-Series/%E7%B7%A8%E8%AD%AF%E4%BE%9D%E5%AD%98-%E5%AE%A3%E5%91%8A%E5%BC%8F%E5%AE%9A%E7%BE%A9%E5%BC%8F%E8%88%87%E5%AF%A6%E4%BD%9C%E7%B4%B0%E7%AF%80","text":"編譯依存-宣告式、定義式與實作細節"},{"source":"/notes/Project/Effective-C++-Series/%E5%B0%87%E6%AA%94%E6%A1%88%E7%9A%84%E7%B7%A8%E8%AD%AF%E4%BE%9D%E5%AD%98%E9%97%9C%E4%BF%82%E9%99%8D%E5%88%B0%E6%9C%80%E4%BD%8E","target":"/notes/Project/Effective-C++-Series/%E7%B7%A8%E8%AD%AF%E4%BE%9D%E5%AD%98-%E5%AE%A3%E5%91%8A%E5%BC%8F%E5%AE%9A%E7%BE%A9%E5%BC%8F%E8%88%87%E5%AF%A6%E4%BD%9C%E7%B4%B0%E7%AF%80","text":"編譯依存-宣告式、定義式與實作細節"}],"/notes/Project/Effective-C++-Series/%E7%B9%BC%E6%89%BF%E6%99%82%E7%9A%84%E5%90%8D%E7%A8%B1%E9%81%AE%E6%8E%A9%E8%A1%8C%E7%82%BA":[{"source":"/notes/Project/Effective-C++-Series/Template-%E5%B8%B6%E4%BE%86%E7%9A%84%E7%A8%8B%E5%BC%8F%E7%A2%BC%E8%86%A8%E8%84%B9","target":"/notes/Project/Effective-C++-Series/%E7%B9%BC%E6%89%BF%E6%99%82%E7%9A%84%E5%90%8D%E7%A8%B1%E9%81%AE%E6%8E%A9%E8%A1%8C%E7%82%BA","text":"繼承時的名稱遮掩行為"},{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","target":"/notes/Project/Effective-C++-Series/%E7%B9%BC%E6%89%BF%E6%99%82%E7%9A%84%E5%90%8D%E7%A8%B1%E9%81%AE%E6%8E%A9%E8%A1%8C%E7%82%BA","text":"繼承時的名稱遮掩行為"},{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","target":"/notes/Project/Effective-C++-Series/%E7%B9%BC%E6%89%BF%E6%99%82%E7%9A%84%E5%90%8D%E7%A8%B1%E9%81%AE%E6%8E%A9%E8%A1%8C%E7%82%BA","text":"繼承時的名稱遮掩行為"},{"source":"/notes/Project/Effective-C++-Series/%E4%BD%BF%E7%94%A8%E9%97%9C%E9%8D%B5%E5%AD%97-using-%E8%AE%93%E7%89%B9%E5%AE%9A-function-%E5%9C%A8-Scope-%E5%85%A7%E5%8F%AF%E8%A6%8B","target":"/notes/Project/Effective-C++-Series/%E7%B9%BC%E6%89%BF%E6%99%82%E7%9A%84%E5%90%8D%E7%A8%B1%E9%81%AE%E6%8E%A9%E8%A1%8C%E7%82%BA","text":"繼承時的名稱遮掩行為"},{"source":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","target":"/notes/Project/Effective-C++-Series/%E7%B9%BC%E6%89%BF%E6%99%82%E7%9A%84%E5%90%8D%E7%A8%B1%E9%81%AE%E6%8E%A9%E8%A1%8C%E7%82%BA","text":"繼承時的名稱遮掩行為"}],"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Function-Pointer-%E5%92%8C-tr1-function-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Strategy-Pattern":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Function-Pointer-%E5%92%8C-tr1-function-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Strategy-Pattern","text":"藉由 Function Pointer 和 tr1 function 手法實現 Strategy Pattern"}],"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Non-Virtual-Interface-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Template-Method-Pattern":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Non-Virtual-Interface-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Template-Method-Pattern","text":"藉由 Non-Virtual Interface 手法實現 Template Method Pattern"},{"source":"/notes/Project/Effective-C++-Series/%E9%9D%9C%E6%85%8B%E7%B6%81%E5%AE%9A-statically-bound-%E8%88%87%E5%8B%95%E6%85%8B%E7%B6%81%E5%AE%9A-dynamically-bound","target":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Non-Virtual-Interface-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Template-Method-Pattern","text":"NVI"}],"/notes/Project/Effective-C++-Series/%E8%A7%A3%E6%A7%8B%E5%BC%8F%E8%88%87%E7%95%B0%E5%B8%B8":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E8%A7%A3%E6%A7%8B%E5%BC%8F%E8%88%87%E7%95%B0%E5%B8%B8","text":"解構式與異常"}],"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","text":"設計新 Class 的準則"}],"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8":[{"source":"/notes/Project/Effective-C++-Series/Const-in-C++","target":"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8","text":"讓介面易於被使用，不易誤用#Return Const Value"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8","text":"讓介面易於被使用，不易誤用"},{"source":"/notes/Project/Effective-C++-Series/Smart-Pointer","target":"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8","text":"讓介面易於被使用，不易誤用"},{"source":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","target":"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8","text":"讓介面易於被使用，不易誤用"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8","text":"讓介面易於被使用，不易誤用"},{"source":"/notes/Project/Effective-C++-Series/%E8%A7%A3%E6%A7%8B%E5%BC%8F%E8%88%87%E7%95%B0%E5%B8%B8","target":"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8","text":"讓介面易於被使用，不易誤用"}],"/notes/Project/Effective-C++-Series/%E9%81%8B%E7%94%A8%E6%88%90%E5%93%A1%E5%87%BD%E5%BC%8F%E6%A8%A1%E6%9D%BF%E6%8E%A5%E5%8F%97%E6%89%80%E6%9C%89%E7%9B%B8%E5%AE%B9%E7%9A%84%E5%9E%8B%E5%88%A5":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E9%81%8B%E7%94%A8%E6%88%90%E5%93%A1%E5%87%BD%E5%BC%8F%E6%A8%A1%E6%9D%BF%E6%8E%A5%E5%8F%97%E6%89%80%E6%9C%89%E7%9B%B8%E5%AE%B9%E7%9A%84%E5%9E%8B%E5%88%A5","text":"運用成員函式模板，接受所有相容的型別"}],"/notes/Project/Effective-C++-Series/%E9%81%BF%E5%85%8D%E5%82%B3%E5%9B%9E-Handles-%E6%8C%87%E5%90%91%E7%89%A9%E4%BB%B6%E7%9A%84-Private-Protected-Member-Data":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E9%81%BF%E5%85%8D%E5%82%B3%E5%9B%9E-Handles-%E6%8C%87%E5%90%91%E7%89%A9%E4%BB%B6%E7%9A%84-Private-Protected-Member-Data","text":"避免傳回 Handles 指向物件的 Private \u0026 Protected Member Data"},{"source":"/notes/Project/Effective-C++-Series/%E6%89%93%E7%A0%B4-Constness-%E9%99%90%E5%88%B6","target":"/notes/Project/Effective-C++-Series/%E9%81%BF%E5%85%8D%E5%82%B3%E5%9B%9E-Handles-%E6%8C%87%E5%90%91%E7%89%A9%E4%BB%B6%E7%9A%84-Private-Protected-Member-Data","text":"避免傳回 Handles 指向物件的 Private \u0026 Protected Member Data"}],"/notes/Project/Effective-C++-Series/%E9%97%9C%E9%8D%B5%E5%AD%97-typename-%E5%9C%A8-Template-%E4%B8%AD%E7%9A%84%E6%84%8F%E6%B6%B5":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E9%97%9C%E9%8D%B5%E5%AD%97-typename-%E5%9C%A8-Template-%E4%B8%AD%E7%9A%84%E6%84%8F%E6%B6%B5","text":"關鍵字 typename 在 Template 中的意涵"}],"/notes/Project/Effective-C++-Series/%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%99%82%E8%AB%8B%E7%82%BA%E6%A8%A1%E6%9D%BF%E5%AE%9A%E7%BE%A9%E9%9D%9E%E6%88%90%E5%93%A1%E5%87%BD%E5%BC%8F":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%99%82%E8%AB%8B%E7%82%BA%E6%A8%A1%E6%9D%BF%E5%AE%9A%E7%BE%A9%E9%9D%9E%E6%88%90%E5%93%A1%E5%87%BD%E5%BC%8F","text":"需要型別轉換時請為模板定義非成員函式"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%99%82%E8%AB%8B%E7%82%BA%E6%A8%A1%E6%9D%BF%E5%AE%9A%E7%BE%A9%E9%9D%9E%E6%88%90%E5%93%A1%E5%87%BD%E5%BC%8F","text":"需要型別轉換時請為模板定義非成員函式"},{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","target":"/notes/Project/Effective-C++-Series/%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%99%82%E8%AB%8B%E7%82%BA%E6%A8%A1%E6%9D%BF%E5%AE%9A%E7%BE%A9%E9%9D%9E%E6%88%90%E5%93%A1%E5%87%BD%E5%BC%8F","text":"需要型別轉換時請為模板定義非成員函式"}],"/notes/Project/Effective-C++-Series/%E9%9D%9C%E6%85%8B%E7%B6%81%E5%AE%9A-statically-bound-%E8%88%87%E5%8B%95%E6%85%8B%E7%B6%81%E5%AE%9A-dynamically-bound":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E9%9D%9C%E6%85%8B%E7%B6%81%E5%AE%9A-statically-bound-%E8%88%87%E5%8B%95%E6%85%8B%E7%B6%81%E5%AE%9A-dynamically-bound","text":"靜態綁定 (statically bound) 與動態綁定 (dynamically bound)"},{"source":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","target":"/notes/Project/Effective-C++-Series/%E9%9D%9C%E6%85%8B%E7%B6%81%E5%AE%9A-statically-bound-%E8%88%87%E5%8B%95%E6%85%8B%E7%B6%81%E5%AE%9A-dynamically-bound","text":"靜態綁定 (statically bound) 與動態綁定 (dynamically bound)"}],"/notes/Project/Effective-C++-Series/80-20-Rule":[{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","target":"/notes/Project/Effective-C++-Series/80-20-Rule","text":"80-20 Rule"}],"/notes/Project/Effective-C++-Series/Array-As-an-Argument":[{"source":"/notes/Project/Effective-C++-Series/Template-ParamType-deduction","target":"/notes/Project/Effective-C++-Series/Array-As-an-Argument","text":"Array As an Argument"}],"/notes/Project/Effective-C++-Series/C++11-std-function":[{"source":"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline","target":"/notes/Project/Effective-C++-Series/C++11-std-function","text":"C++11 std function"},{"source":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Function-Pointer-%E5%92%8C-tr1-function-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Strategy-Pattern","target":"/notes/Project/Effective-C++-Series/C++11-std-function","text":"C++11 std function"}],"/notes/Project/Effective-C++-Series/Chapter3":[{"source":"/notes/Project/Effective-C++-Series/%E8%A7%A3%E6%A7%8B%E5%BC%8F%E8%88%87%E7%95%B0%E5%B8%B8","target":"/notes/Project/Effective-C++-Series/Chapter3","text":"Chapter3"}],"/notes/Project/Effective-C++-Series/Classic-Strategy-Pattern":[{"source":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Function-Pointer-%E5%92%8C-tr1-function-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Strategy-Pattern","target":"/notes/Project/Effective-C++-Series/Classic-Strategy-Pattern","text":"Strategy Pattern"},{"source":"/notes/Resource/MOCs/Design-Pattern","target":"/notes/Project/Effective-C++-Series/Classic-Strategy-Pattern","text":"Classic Strategy Pattern"}],"/notes/Project/Effective-C++-Series/Const-in-C++":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Const-in-C++","text":"Const in C++"}],"/notes/Project/Effective-C++-Series/Const-member-function":[{"source":"/notes/Project/Effective-C++-Series/Const-in-C++","target":"/notes/Project/Effective-C++-Series/Const-member-function","text":"Const member function"}],"/notes/Project/Effective-C++-Series/Copying-Function":[{"source":"/notes/Project/Effective-C++-Series/Default-Generated-Functions","target":"/notes/Project/Effective-C++-Series/Copying-Function","text":"Copying Function"}],"/notes/Project/Effective-C++-Series/Copying-function":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Copying-function","text":"Copying function"}],"/notes/Project/Effective-C++-Series/Default-Generated-Functions":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Default-Generated-Functions","text":"Default Generated Functions"},{"source":"/notes/Project/Effective-C++-Series/Member-Function-Template","target":"/notes/Project/Effective-C++-Series/Default-Generated-Functions","text":"Default Generated Functions"}],"/notes/Project/Effective-C++-Series/Deleted-Function":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Deleted-Function","text":"Deleted Function"}],"/notes/Project/Effective-C++-Series/EBO-Empty-Base-Optimization":[{"source":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","target":"/notes/Project/Effective-C++-Series/EBO-Empty-Base-Optimization","text":"EBO (Empty Base Optimization)"}],"/notes/Project/Effective-C++-Series/Effective-C++-Outline":[{"source":"/","target":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","text":"notes/Project/Effective C++ Series/Effective C++ Outline"},{"source":"/notes/Project/Effective-C++-Series/Member-Initialization-List","target":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","text":"Effective C++ Outline#條款5 了解 C++默默編寫並呼叫哪些函式"},{"source":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","target":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","text":"條款4 確定物件在使用前已經初始化"},{"source":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","target":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","text":"條款7 為多型用途的基礎類別宣告 virtual 解構式"},{"source":"/notes/Project/Effective-C++-Series/%E9%81%BF%E5%85%8D%E5%82%B3%E5%9B%9E-Handles-%E6%8C%87%E5%90%91%E7%89%A9%E4%BB%B6%E7%9A%84-Private-Protected-Member-Data","target":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","text":"Effective C++ Outline#條款3 盡可能使用 const"},{"source":"/notes/Resource/MOCs/C++-Resources","target":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","text":"Effective C++ Outline"}],"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline":[{"source":"/notes/Resource/MOCs/C++-Resources","target":"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline","text":"Effective modern C++ Outline"}],"/notes/Project/Effective-C++-Series/Friend-Function":[{"source":"/notes/Project/Effective-C++-Series/Non-member-Non-friend-Function-%E7%9A%84%E5%B0%81%E8%A3%9D%E5%BA%A6%E5%84%AA%E6%96%BC-Member-Function","target":"/notes/Project/Effective-C++-Series/Friend-Function","text":"Friend Function"}],"/notes/Project/Effective-C++-Series/Function-As-an-Argument":[{"source":"/notes/Project/Effective-C++-Series/Template-ParamType-deduction","target":"/notes/Project/Effective-C++-Series/Function-As-an-Argument","text":"Function As an Argument"}],"/notes/Project/Effective-C++-Series/Has-A":[{"source":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","target":"/notes/Project/Effective-C++-Series/Has-A","text":"Has A"}],"/notes/Project/Effective-C++-Series/Identify-Initialization-and-Assignment":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Identify-Initialization-and-Assignment","text":"Identify Initialization and Assignment"}],"/notes/Project/Effective-C++-Series/Implicit-TemplateInstantiation":[{"source":"/notes/Project/Effective-C++-Series/Static-Object","target":"/notes/Project/Effective-C++-Series/Implicit-TemplateInstantiation","text":"Implicit TemplateInstantiation"}],"/notes/Project/Effective-C++-Series/Impure-Virtual-Function":[{"source":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","target":"/notes/Project/Effective-C++-Series/Impure-Virtual-Function","text":"Impure Virtual Function"}],"/notes/Project/Effective-C++-Series/Is-Implemented-in-Terms-of":[{"source":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","target":"/notes/Project/Effective-C++-Series/Is-Implemented-in-Terms-of","text":"Is Implemented in Terms of"}],"/notes/Project/Effective-C++-Series/Item15-constexpr":[{"source":"/notes/Project/Effective-C++-Series/Array-As-an-Argument","target":"/notes/Project/Effective-C++-Series/Item15-constexpr","text":"Item15 constexpr"},{"source":"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline","target":"/notes/Project/Effective-C++-Series/Item15-constexpr","text":"Item15 constexpr"}],"/notes/Project/Effective-C++-Series/Item24-Distinguish-universal-references-from-rvalue-references":[{"source":"/notes/Project/Effective-C++-Series/ParamType-%E6%98%AF-Universal-Reference","target":"/notes/Project/Effective-C++-Series/Item24-Distinguish-universal-references-from-rvalue-references","text":"Item24 Distinguish universal references from rvalue references"}],"/notes/Project/Effective-C++-Series/Item36-Never-redefine-an-inherited-non-virtual-function":[{"source":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","target":"/notes/Project/Effective-C++-Series/Item36-Never-redefine-an-inherited-non-virtual-function","text":"Item36 Never redefine an inherited non-virtual function"}],"/notes/Project/Effective-C++-Series/Item47-Use-traits-classes-for-information-about-types":[{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/Item47-Use-traits-classes-for-information-about-types","text":"Item47 Use traits classes for information about types"}],"/notes/Project/Effective-C++-Series/Item54-Familiarize-yourself-with-the-standard-library-including-TR1":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Item54-Familiarize-yourself-with-the-standard-library-including-TR1","text":"Item54 Familiarize yourself with the standard library including TR1"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Item54-Familiarize-yourself-with-the-standard-library-including-TR1","text":"Item54 Familiarize yourself with the standard library including TR1"}],"/notes/Project/Effective-C++-Series/Item55-Familiarize-yourself-with-Boost":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Item55-Familiarize-yourself-with-Boost","text":"Item55 Familiarize yourself with Boost"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/Item55-Familiarize-yourself-with-Boost","text":"Item55 Familiarize yourself with Boost"}],"/notes/Project/Effective-C++-Series/Member-Function-Template":[{"source":"/notes/Project/Effective-C++-Series/Template-and-Generic-Programming","target":"/notes/Project/Effective-C++-Series/Member-Function-Template","text":"Member Function Template"}],"/notes/Project/Effective-C++-Series/Member-Initialization-List":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Member-Initialization-List","text":"Member Initialization List"}],"/notes/Project/Effective-C++-Series/Modern-C++-noexcept":[{"source":"/notes/Project/Effective-C++-Series/Array-As-an-Argument","target":"/notes/Project/Effective-C++-Series/Modern-C++-noexcept","text":"Modern C++ noexcept"},{"source":"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline","target":"/notes/Project/Effective-C++-Series/Modern-C++-noexcept","text":"Modern C++ noexcept"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E7%95%B0%E5%B8%B8%E5%AE%89%E5%85%A8-Exception-safe-%E8%80%8C%E5%8A%AA%E5%8A%9B%E6%98%AF%E5%80%BC%E5%BE%97%E7%9A%84","target":"/notes/Project/Effective-C++-Series/Modern-C++-noexcept","text":"Modern C++ noexcept"},{"source":"/notes/Project/Effective-C++-Series/%E8%A7%A3%E6%A7%8B%E5%BC%8F%E8%88%87%E7%95%B0%E5%B8%B8","target":"/notes/Project/Effective-C++-Series/Modern-C++-noexcept","text":"Modern C++ noexcept"}],"/notes/Project/Effective-C++-Series/Mutex":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Mutex","text":"Mutex"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E7%95%B0%E5%B8%B8%E5%AE%89%E5%85%A8-Exception-safe-%E8%80%8C%E5%8A%AA%E5%8A%9B%E6%98%AF%E5%80%BC%E5%BE%97%E7%9A%84","target":"/notes/Project/Effective-C++-Series/Mutex","text":"Mutex"}],"/notes/Project/Effective-C++-Series/Non-member-Non-friend-Function-%E7%9A%84%E5%B0%81%E8%A3%9D%E5%BA%A6%E5%84%AA%E6%96%BC-Member-Function":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Non-member-Non-friend-Function-%E7%9A%84%E5%B0%81%E8%A3%9D%E5%BA%A6%E5%84%AA%E6%96%BC-Member-Function","text":"Non-member \u0026\u0026 Non-friend Function 的封裝度優於 Member Function"},{"source":"/notes/Project/Effective-C++-Series/non-member-non-friend-function","target":"/notes/Project/Effective-C++-Series/Non-member-Non-friend-Function-%E7%9A%84%E5%B0%81%E8%A3%9D%E5%BA%A6%E5%84%AA%E6%96%BC-Member-Function","text":"Non-member \u0026\u0026 Non-friend Function 的封裝度優於 Member Function"},{"source":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","target":"/notes/Project/Effective-C++-Series/Non-member-Non-friend-Function-%E7%9A%84%E5%B0%81%E8%A3%9D%E5%BA%A6%E5%84%AA%E6%96%BC-Member-Function","text":"Non-member \u0026\u0026 Non-friend Function 的封裝度優於 Member Function"}],"/notes/Project/Effective-C++-Series/ParamType-%E6%98%AF-Pointer-%E6%88%96-Reference%E4%BD%86%E4%B8%8D%E6%98%AF-Universal-Reference":[{"source":"/notes/Project/Effective-C++-Series/ParamType-%E6%98%AF-Universal-Reference","target":"/notes/Project/Effective-C++-Series/ParamType-%E6%98%AF-Pointer-%E6%88%96-Reference%E4%BD%86%E4%B8%8D%E6%98%AF-Universal-Reference","text":"ParamType 是 Pointer 或 Reference，但不是 Universal Reference"}],"/notes/Project/Effective-C++-Series/ParamType-%E6%98%AF-Pointer-%E6%88%96-Reference-%E4%BD%86%E4%B8%8D%E6%98%AF-Universal-Reference":[{"source":"/notes/Project/Effective-C++-Series/Template-ParamType-deduction","target":"/notes/Project/Effective-C++-Series/ParamType-%E6%98%AF-Pointer-%E6%88%96-Reference-%E4%BD%86%E4%B8%8D%E6%98%AF-Universal-Reference","text":"ParamType 是 Pointer 或 Reference 但不是 Universal Reference"}],"/notes/Project/Effective-C++-Series/ParamType-%E6%98%AF-Universal-Reference":[{"source":"/notes/Project/Effective-C++-Series/Template-ParamType-deduction","target":"/notes/Project/Effective-C++-Series/ParamType-%E6%98%AF-Universal-Reference","text":"ParamType 是 Universal Reference"}],"/notes/Project/Effective-C++-Series/ParamType-%E9%9D%9E-Reference-%E6%88%96-Pointer":[{"source":"/notes/Project/Effective-C++-Series/Template-ParamType-deduction","target":"/notes/Project/Effective-C++-Series/ParamType-%E9%9D%9E-Reference-%E6%88%96-Pointer","text":"ParamType 非 Reference 或 Pointer"}],"/notes/Project/Effective-C++-Series/Pass-by-value-%E7%95%B6%E4%B8%AD%E7%9A%84-Copy-%E8%A1%8C%E7%82%BA":[{"source":"/notes/Project/Effective-C++-Series/%E6%80%9D%E7%B6%AD%E8%AA%A4%E5%8D%80-%E7%89%A9%E4%BB%B6%E5%BE%88%E5%B0%8F%E5%B0%B1%E5%8F%AF%E4%BB%A5-Pass-By-value","target":"/notes/Project/Effective-C++-Series/Pass-by-value-%E7%95%B6%E4%B8%AD%E7%9A%84-Copy-%E8%A1%8C%E7%82%BA","text":"Pass by value 當中的 Copy 行為"}],"/notes/Project/Effective-C++-Series/Protected-%E8%88%87-Public-%E9%83%BD%E6%98%AF%E4%BD%8E%E5%B0%81%E8%A3%9D%E5%BA%A6%E7%9A%84-Access-Level":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Protected-%E8%88%87-Public-%E9%83%BD%E6%98%AF%E4%BD%8E%E5%B0%81%E8%A3%9D%E5%BA%A6%E7%9A%84-Access-Level","text":"Protected 與 Public 都是低封裝度的 Access Level"},{"source":"/notes/Project/Effective-C++-Series/Non-member-Non-friend-Function-%E7%9A%84%E5%B0%81%E8%A3%9D%E5%BA%A6%E5%84%AA%E6%96%BC-Member-Function","target":"/notes/Project/Effective-C++-Series/Protected-%E8%88%87-Public-%E9%83%BD%E6%98%AF%E4%BD%8E%E5%B0%81%E8%A3%9D%E5%BA%A6%E7%9A%84-Access-Level","text":"Protected 與 Public 都是低封裝度的 Access Level"}],"/notes/Project/Effective-C++-Series/Pure-Virtual-Destructor":[{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/Pure-Virtual-Destructor","text":"Pure Virtual Destructor"}],"/notes/Project/Effective-C++-Series/Pure-Virtual-Function":[{"source":"/notes/Project/Effective-C++-Series/Impure-Virtual-Function","target":"/notes/Project/Effective-C++-Series/Pure-Virtual-Function","text":"Pure Virtual Function"},{"source":"/notes/Project/Effective-C++-Series/Pure-Virtual-Destructor","target":"/notes/Project/Effective-C++-Series/Pure-Virtual-Function","text":"Pure Virtual Function"},{"source":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","target":"/notes/Project/Effective-C++-Series/Pure-Virtual-Function","text":"Pure Virtual Function"},{"source":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","target":"/notes/Project/Effective-C++-Series/Pure-Virtual-Function","text":"Pure Virtual Function"}],"/notes/Project/Effective-C++-Series/Singleton":[{"source":"/notes/Project/Effective-C++-Series/Static-Object","target":"/notes/Project/Effective-C++-Series/Singleton","text":"Singleton"}],"/notes/Project/Effective-C++-Series/Smart-Pointer":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Smart-Pointer","text":"Smart Pointer"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Smart-Pointer","text":"Smart Pointer"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/Smart-Pointer","text":"條款13 使用資源管理器"}],"/notes/Project/Effective-C++-Series/Static-Object":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Static-Object","text":"Static Object"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Static-Object","text":"Static Object"},{"source":"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8","target":"/notes/Project/Effective-C++-Series/Static-Object","text":"Static Object"}],"/notes/Project/Effective-C++-Series/Swap-and-pimpl":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Swap-and-pimpl","text":"Swap and pimpl"}],"/notes/Project/Effective-C++-Series/Template-%E5%B8%B6%E4%BE%86%E7%9A%84%E7%A8%8B%E5%BC%8F%E7%A2%BC%E8%86%A8%E8%84%B9":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Template-%E5%B8%B6%E4%BE%86%E7%9A%84%E7%A8%8B%E5%BC%8F%E7%A2%BC%E8%86%A8%E8%84%B9","text":"Template 帶來的程式碼膨脹"}],"/notes/Project/Effective-C++-Series/Template-%E7%9A%84%E7%94%A8%E9%80%94":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Template-%E7%9A%84%E7%94%A8%E9%80%94","text":"Template 的用途"}],"/notes/Project/Effective-C++-Series/Template-%E8%88%87%E9%9A%B1%E5%BC%8F%E4%BB%8B%E9%9D%A2":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Template-%E8%88%87%E9%9A%B1%E5%BC%8F%E4%BB%8B%E9%9D%A2","text":"Template 與隱式介面"}],"/notes/Project/Effective-C++-Series/Template-Method":[{"source":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Non-Virtual-Interface-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Template-Method-Pattern","target":"/notes/Project/Effective-C++-Series/Template-Method","text":"Template Method"},{"source":"/notes/Resource/MOCs/Design-Pattern","target":"/notes/Project/Effective-C++-Series/Template-Method","text":"Template Method"}],"/notes/Project/Effective-C++-Series/Template-ParamType-deduction":[{"source":"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline","target":"/notes/Project/Effective-C++-Series/Template-ParamType-deduction","text":"Template ParamType deduction"}],"/notes/Project/Effective-C++-Series/Template-and-Generic-Programming":[{"source":"/notes/Project/Effective-C++-Series/%E9%81%8B%E7%94%A8%E6%88%90%E5%93%A1%E5%87%BD%E5%BC%8F%E6%A8%A1%E6%9D%BF%E6%8E%A5%E5%8F%97%E6%89%80%E6%9C%89%E7%9B%B8%E5%AE%B9%E7%9A%84%E5%9E%8B%E5%88%A5","target":"/notes/Project/Effective-C++-Series/Template-and-Generic-Programming","text":"Template and Generic Programming"}],"/notes/Project/Effective-C++-Series/The-definition-and-declaration-of-static-const":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/The-definition-and-declaration-of-static-const","text":"The definition and declaration of static const"}],"/notes/Project/Effective-C++-Series/Total-Template-Specialization":[{"source":"/notes/Project/Effective-C++-Series/Swap-and-pimpl","target":"/notes/Project/Effective-C++-Series/Total-Template-Specialization","text":"Total Template Specialization"},{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","target":"/notes/Project/Effective-C++-Series/Total-Template-Specialization","text":"Total Template Specialization"}],"/notes/Project/Effective-C++-Series/Translation-Unit":[{"source":"/notes/Project/Effective-C++-Series/Static-Object","target":"/notes/Project/Effective-C++-Series/Translation-Unit","text":"Translation Unit"},{"source":"/notes/Project/Effective-C++-Series/Static-Object","target":"/notes/Project/Effective-C++-Series/Translation-Unit","text":"Translation Unit"}],"/notes/Project/Effective-C++-Series/Virtual-Base-Class":[{"source":"/notes/Project/Effective-C++-Series/%E5%A4%9A%E9%87%8D%E7%B9%BC%E6%89%BF-Multiple-Inheritance-MI","target":"/notes/Project/Effective-C++-Series/Virtual-Base-Class","text":"Virtual Base Class"}],"/notes/Project/Effective-C++-Series/Virtual-Function":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Virtual-Function","text":"Virtual Function"}],"/notes/Project/Effective-C++-Series/enum-hack":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/enum-hack","text":"enum hack"}],"/notes/Project/Effective-C++-Series/non-member-non-friend-function":[{"source":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Function-Pointer-%E5%92%8C-tr1-function-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Strategy-Pattern","target":"/notes/Project/Effective-C++-Series/non-member-non-friend-function","text":"non-member \u0026\u0026 non-friend function"}],"/notes/Project/Effective-C++-Series/operator-overloading":[{"source":"/notes/Project/Effective-C++-Series/Template-%E8%88%87%E9%9A%B1%E5%BC%8F%E4%BB%8B%E9%9D%A2","target":"/notes/Project/Effective-C++-Series/operator-overloading","text":"operator overloading"},{"source":"/notes/Project/Effective-C++-Series/%E7%95%B6%E6%89%80%E6%9C%89%E7%9A%84%E5%8F%83%E6%95%B8%E9%83%BD%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%8E%A1%E7%94%A8-Non-member-Function","target":"/notes/Project/Effective-C++-Series/operator-overloading","text":"operator overloading"}],"/notes/Project/Effective-C++-Series/override":[{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/override","text":"override"},{"source":"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline","target":"/notes/Project/Effective-C++-Series/override","text":"override"}],"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation":[{"source":"/notes/Project/Effective-C++-Series/Swap-and-pimpl","target":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","text":"pimpl idiom (pointer to implementation)"},{"source":"/notes/Project/Effective-C++-Series/%E5%B0%87%E6%AA%94%E6%A1%88%E7%9A%84%E7%B7%A8%E8%AD%AF%E4%BE%9D%E5%AD%98%E9%97%9C%E4%BF%82%E9%99%8D%E5%88%B0%E6%9C%80%E4%BD%8E","target":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","text":"pimpl idiom (pointer to implementation)"}],"/notes/Project/Effective-C++-Series/typedef-and-using":[{"source":"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline","target":"/notes/Project/Effective-C++-Series/typedef-and-using","text":"typedef and using"},{"source":"/notes/Project/Effective-C++-Series/%E9%97%9C%E9%8D%B5%E5%AD%97-typename-%E5%9C%A8-Template-%E4%B8%AD%E7%9A%84%E6%84%8F%E6%B6%B5","target":"/notes/Project/Effective-C++-Series/typedef-and-using","text":"typedef and using"}],"/notes/Resource/Books/The-Second-Brain":[{"source":"/","target":"/notes/Resource/Books/The-Second-Brain","text":"notes/Resource/Books/The Second Brain"}],"/tags":[{"source":"/","target":"/tags","text":"tags"}]}},"links":[{"source":"/","target":"/notes/Resource/Books/The-Second-Brain","text":"notes/Resource/Books/The Second Brain"},{"source":"/","target":"/notes","text":"notes"},{"source":"/","target":"/tags","text":"tags"},{"source":"/","target":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","text":"notes/Project/Effective C++ Series/Effective C++ Outline"},{"source":"/notes/Area/Obsidian/Obsidian-Plugins","target":"/notes/Area/Obsidian/Obsidian-Map-View","text":"Obsidian Map View"},{"source":"/notes/Area/Quartz/%E4%BD%BF%E7%94%A8-Quartz-%E5%BB%BA%E7%AB%8B%E9%83%A8%E8%90%BD%E6%A0%BC","target":"/notes/Area/Quartz/Publish-Quartz-to-Github-Page","text":"Publish Quartz to Github Page"},{"source":"/notes/Project/Effective-C++-Series/Array-As-an-Argument","target":"/notes/Project/Effective-C++-Series/Item15-constexpr","text":"Item15 constexpr"},{"source":"/notes/Project/Effective-C++-Series/Array-As-an-Argument","target":"/notes/Project/Effective-C++-Series/Modern-C++-noexcept","text":"Modern C++ noexcept"},{"source":"/notes/Project/Effective-C++-Series/Const-in-C++","target":"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8","text":"讓介面易於被使用，不易誤用#Return Const Value"},{"source":"/notes/Project/Effective-C++-Series/Const-in-C++","target":"/notes/Project/Effective-C++-Series/Const-member-function","text":"Const member function"},{"source":"/notes/Project/Effective-C++-Series/Const-in-C++","target":"/notes/Project/Effective-C++-Series/%E6%89%93%E7%A0%B4-Constness-%E9%99%90%E5%88%B6","text":"打破 Constness 限制"},{"source":"/notes/Project/Effective-C++-Series/Default-Generated-Functions","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","text":"為多型用途的基礎類別宣告 virtual 解構式"},{"source":"/notes/Project/Effective-C++-Series/Default-Generated-Functions","target":"/notes/Project/Effective-C++-Series/Copying-Function","text":"Copying Function"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E4%BB%A5-Const-%E5%8F%96%E4%BB%A3%E4%BD%BF%E7%94%A8-Define","text":"以 Const 取代使用 Define"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/The-definition-and-declaration-of-static-const","text":"The definition and declaration of static const"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/enum-hack","text":"enum hack"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Const-in-C++","text":"Const in C++"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Member-Initialization-List","text":"Member Initialization List"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Identify-Initialization-and-Assignment","text":"Identify Initialization and Assignment"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Static-Object","text":"Static Object"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E5%BB%BA%E6%A7%8B%E5%92%8C%E8%A7%A3%E6%A7%8B%E5%BC%8F%E6%98%AF-inline-%E7%9A%84%E7%B3%9F%E7%B3%95%E4%BA%BA%E9%81%B8","text":"建構和解構式是 inline 的糟糕人選"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Default-Generated-Functions","text":"Default Generated Functions"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Deleted-Function","text":"Deleted Function"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","text":"為多型用途的基礎類別宣告 virtual 解構式"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E8%A7%A3%E6%A7%8B%E5%BC%8F%E8%88%87%E7%95%B0%E5%B8%B8","text":"解構式與異常"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Virtual-Function","text":"Virtual Function"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Item54-Familiarize-yourself-with-the-standard-library-including-TR1","text":"Item54 Familiarize yourself with the standard library including TR1"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Copying-function","text":"Copying function"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Smart-Pointer","text":"Smart Pointer"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Mutex","text":"Mutex"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Smart-Pointer","text":"Smart Pointer"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E4%BB%80%E9%BA%BC%E8%A6%81%E7%94%A8%E7%8D%A8%E7%AB%8B%E5%8F%A5%E5%B0%87%E7%89%A9%E4%BB%B6%E6%94%BE%E5%85%A5-Smart-Pointer","text":"為什麼要用獨立句將物件放入 Smart Pointer"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8","text":"讓介面易於被使用，不易誤用"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","text":"設計新 Class 的準則"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E6%80%9D%E7%B6%AD%E8%AA%A4%E5%8D%80-%E7%89%A9%E4%BB%B6%E5%BE%88%E5%B0%8F%E5%B0%B1%E5%8F%AF%E4%BB%A5-Pass-By-Value","text":"思維誤區-物件很小就可以 Pass By Value"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Static-Object","text":"Static Object"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Protected-%E8%88%87-Public-%E9%83%BD%E6%98%AF%E4%BD%8E%E5%B0%81%E8%A3%9D%E5%BA%A6%E7%9A%84-Access-Level","text":"Protected 與 Public 都是低封裝度的 Access Level"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Non-member-Non-friend-Function-%E7%9A%84%E5%B0%81%E8%A3%9D%E5%BA%A6%E5%84%AA%E6%96%BC-Member-Function","text":"Non-member \u0026\u0026 Non-friend Function 的封裝度優於 Member Function"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%99%82%E8%AB%8B%E7%82%BA%E6%A8%A1%E6%9D%BF%E5%AE%9A%E7%BE%A9%E9%9D%9E%E6%88%90%E5%93%A1%E5%87%BD%E5%BC%8F","text":"需要型別轉換時請為模板定義非成員函式"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%95%B6%E6%89%80%E6%9C%89%E7%9A%84%E5%8F%83%E6%95%B8%E9%83%BD%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%8E%A1%E7%94%A8-Non-member-Function","text":"當所有的參數都需要型別轉換，採用 Non-member Function"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Swap-and-pimpl","text":"Swap and pimpl"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%9B%A1%E5%8F%AF%E8%83%BD%E5%BB%B6%E5%BE%8C%E8%AE%8A%E6%95%B8%E5%AE%9A%E7%BE%A9%E5%BC%8F%E7%9A%84%E5%87%BA%E7%8F%BE%E6%99%82%E9%96%93","text":"盡可能延後變數定義式的出現時間"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E5%B0%91%E5%81%9A%E8%BD%89%E5%9E%8B%E5%8B%95%E4%BD%9CMinimize-casting","text":"少做轉型動作(Minimize casting)"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E9%81%BF%E5%85%8D%E5%82%B3%E5%9B%9E-Handles-%E6%8C%87%E5%90%91%E7%89%A9%E4%BB%B6%E7%9A%84-Private-Protected-Member-Data","text":"避免傳回 Handles 指向物件的 Private \u0026 Protected Member Data"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E7%95%B0%E5%B8%B8%E5%AE%89%E5%85%A8-Exception-safe-%E8%80%8C%E5%8A%AA%E5%8A%9B%E6%98%AF%E5%80%BC%E5%BE%97%E7%9A%84","text":"為異常安全 (Exception-safe) 而努力是值得的"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","text":"了解 Inline 的裡裡外外"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E5%B0%87%E6%AA%94%E6%A1%88%E7%9A%84%E7%B7%A8%E8%AD%AF%E4%BE%9D%E5%AD%98%E9%97%9C%E4%BF%82%E9%99%8D%E5%88%B0%E6%9C%80%E4%BD%8E","text":"將檔案的編譯依存關係降到最低"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","text":"確保 Derived Class 和 Base Class 之間必然保持 Is-a 關係"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","text":"審慎的使用 Private 繼承"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E4%BD%BF%E7%94%A8%E9%97%9C%E9%8D%B5%E5%AD%97-using-%E8%AE%93%E7%89%B9%E5%AE%9A-function-%E5%9C%A8-Scope-%E5%85%A7%E5%8F%AF%E8%A6%8B","text":"使用關鍵字 using 讓特定 function 在 Scope 內可見"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/override","text":"override"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","text":"區分介面繼承(interface)和實作繼承(implement)"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Non-Virtual-Interface-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Template-Method-Pattern","text":"藉由 Non-Virtual Interface 手法實現 Template Method Pattern"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Function-Pointer-%E5%92%8C-tr1-function-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Strategy-Pattern","text":"藉由 Function Pointer 和 tr1 function 手法實現 Strategy Pattern"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","text":"絕不重新定義繼承來的 Non-virtual Function"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E9%9D%9C%E6%85%8B%E7%B6%81%E5%AE%9A-statically-bound-%E8%88%87%E5%8B%95%E6%85%8B%E7%B6%81%E5%AE%9A-dynamically-bound","text":"靜態綁定 (statically bound) 與動態綁定 (dynamically bound)"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E5%AE%9A-Composition-%E5%A1%91%E9%80%A0%E7%9A%84%E6%98%AF-Has-A%E9%97%9C%E4%BF%82-%E6%88%96-%E6%A0%B9%E6%93%9A%E6%9F%90%E7%89%A9%E5%AF%A6%E4%BD%9C%E7%9A%84%E9%97%9C%E4%BF%82","text":"確定 Composition 塑造的是 'Has-A'關係 或 '根據某物實作'的關係"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","text":"審慎的使用 Private 繼承"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E5%A4%9A%E9%87%8D%E7%B9%BC%E6%89%BF-Multiple-Inheritance-MI","text":"多重繼承 (Multiple Inheritance, MI)"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Template-%E7%9A%84%E7%94%A8%E9%80%94","text":"Template 的用途"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Template-%E8%88%87%E9%9A%B1%E5%BC%8F%E4%BB%8B%E9%9D%A2","text":"Template 與隱式介面"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E9%97%9C%E9%8D%B5%E5%AD%97-typename-%E5%9C%A8-Template-%E4%B8%AD%E7%9A%84%E6%84%8F%E6%B6%B5","text":"關鍵字 typename 在 Template 中的意涵"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","text":"了解如何在 Template 中指涉 Base Class 成員"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Template-%E5%B8%B6%E4%BE%86%E7%9A%84%E7%A8%8B%E5%BC%8F%E7%A2%BC%E8%86%A8%E8%84%B9","text":"Template 帶來的程式碼膨脹"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E9%81%8B%E7%94%A8%E6%88%90%E5%93%A1%E5%87%BD%E5%BC%8F%E6%A8%A1%E6%9D%BF%E6%8E%A5%E5%8F%97%E6%89%80%E6%9C%89%E7%9B%B8%E5%AE%B9%E7%9A%84%E5%9E%8B%E5%88%A5","text":"運用成員函式模板，接受所有相容的型別"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%99%82%E8%AB%8B%E7%82%BA%E6%A8%A1%E6%9D%BF%E5%AE%9A%E7%BE%A9%E9%9D%9E%E6%88%90%E5%93%A1%E5%87%BD%E5%BC%8F","text":"需要型別轉換時請為模板定義非成員函式"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Item54-Familiarize-yourself-with-the-standard-library-including-TR1","text":"Item54 Familiarize yourself with the standard library including TR1"},{"source":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","target":"/notes/Project/Effective-C++-Series/Item55-Familiarize-yourself-with-Boost","text":"Item55 Familiarize yourself with Boost"},{"source":"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline","target":"/notes/Project/Effective-C++-Series/Template-ParamType-deduction","text":"Template ParamType deduction"},{"source":"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline","target":"/notes/Project/Effective-C++-Series/typedef-and-using","text":"typedef and using"},{"source":"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline","target":"/notes/Project/Effective-C++-Series/override","text":"override"},{"source":"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline","target":"/notes/Project/Effective-C++-Series/Modern-C++-noexcept","text":"Modern C++ noexcept"},{"source":"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline","target":"/notes/Project/Effective-C++-Series/Item15-constexpr","text":"Item15 constexpr"},{"source":"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline","target":"/notes/Project/Effective-C++-Series/C++11-std-function","text":"C++11 std function"},{"source":"/notes/Project/Effective-C++-Series/Impure-Virtual-Function","target":"/notes/Project/Effective-C++-Series/Pure-Virtual-Function","text":"Pure Virtual Function"},{"source":"/notes/Project/Effective-C++-Series/Member-Function-Template","target":"/notes/Project/Effective-C++-Series/Default-Generated-Functions","text":"Default Generated Functions"},{"source":"/notes/Project/Effective-C++-Series/Member-Initialization-List","target":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","text":"Effective C++ Outline#條款5 了解 C++默默編寫並呼叫哪些函式"},{"source":"/notes/Project/Effective-C++-Series/Modern-C++-noexcept","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E7%95%B0%E5%B8%B8%E5%AE%89%E5%85%A8-Exception-safe-%E8%80%8C%E5%8A%AA%E5%8A%9B%E6%98%AF%E5%80%BC%E5%BE%97%E7%9A%84","text":"為異常安全 (Exception-safe) 而努力是值得的"},{"source":"/notes/Project/Effective-C++-Series/Non-member-Non-friend-Function-%E7%9A%84%E5%B0%81%E8%A3%9D%E5%BA%A6%E5%84%AA%E6%96%BC-Member-Function","target":"/notes/Project/Effective-C++-Series/Friend-Function","text":"Friend Function"},{"source":"/notes/Project/Effective-C++-Series/Non-member-Non-friend-Function-%E7%9A%84%E5%B0%81%E8%A3%9D%E5%BA%A6%E5%84%AA%E6%96%BC-Member-Function","target":"/notes/Project/Effective-C++-Series/Protected-%E8%88%87-Public-%E9%83%BD%E6%98%AF%E4%BD%8E%E5%B0%81%E8%A3%9D%E5%BA%A6%E7%9A%84-Access-Level","text":"Protected 與 Public 都是低封裝度的 Access Level"},{"source":"/notes/Project/Effective-C++-Series/ParamType-%E6%98%AF-Universal-Reference","target":"/notes/Project/Effective-C++-Series/Item24-Distinguish-universal-references-from-rvalue-references","text":"Item24 Distinguish universal references from rvalue references"},{"source":"/notes/Project/Effective-C++-Series/ParamType-%E6%98%AF-Universal-Reference","target":"/notes/Project/Effective-C++-Series/ParamType-%E6%98%AF-Pointer-%E6%88%96-Reference%E4%BD%86%E4%B8%8D%E6%98%AF-Universal-Reference","text":"ParamType 是 Pointer 或 Reference，但不是 Universal Reference"},{"source":"/notes/Project/Effective-C++-Series/Pure-Virtual-Destructor","target":"/notes/Project/Effective-C++-Series/Pure-Virtual-Function","text":"Pure Virtual Function"},{"source":"/notes/Project/Effective-C++-Series/Smart-Pointer","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","text":"為多型用途的基礎類別宣告 virtual 解構式"},{"source":"/notes/Project/Effective-C++-Series/Smart-Pointer","target":"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8","text":"讓介面易於被使用，不易誤用"},{"source":"/notes/Project/Effective-C++-Series/Static-Object","target":"/notes/Project/Effective-C++-Series/Translation-Unit","text":"Translation Unit"},{"source":"/notes/Project/Effective-C++-Series/Static-Object","target":"/notes/Project/Effective-C++-Series/Translation-Unit","text":"Translation Unit"},{"source":"/notes/Project/Effective-C++-Series/Static-Object","target":"/notes/Project/Effective-C++-Series/Implicit-TemplateInstantiation","text":"Implicit TemplateInstantiation"},{"source":"/notes/Project/Effective-C++-Series/Static-Object","target":"/notes/Project/Effective-C++-Series/Singleton","text":"Singleton"},{"source":"/notes/Project/Effective-C++-Series/Static-Object","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","text":"了解 Inline 的裡裡外外"},{"source":"/notes/Project/Effective-C++-Series/Swap-and-pimpl","target":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","text":"pimpl idiom (pointer to implementation)"},{"source":"/notes/Project/Effective-C++-Series/Swap-and-pimpl","target":"/notes/Project/Effective-C++-Series/Total-Template-Specialization","text":"Total Template Specialization"},{"source":"/notes/Project/Effective-C++-Series/Template-ParamType-deduction","target":"/notes/Project/Effective-C++-Series/ParamType-%E6%98%AF-Pointer-%E6%88%96-Reference-%E4%BD%86%E4%B8%8D%E6%98%AF-Universal-Reference","text":"ParamType 是 Pointer 或 Reference 但不是 Universal Reference"},{"source":"/notes/Project/Effective-C++-Series/Template-ParamType-deduction","target":"/notes/Project/Effective-C++-Series/ParamType-%E6%98%AF-Universal-Reference","text":"ParamType 是 Universal Reference"},{"source":"/notes/Project/Effective-C++-Series/Template-ParamType-deduction","target":"/notes/Project/Effective-C++-Series/ParamType-%E9%9D%9E-Reference-%E6%88%96-Pointer","text":"ParamType 非 Reference 或 Pointer"},{"source":"/notes/Project/Effective-C++-Series/Template-ParamType-deduction","target":"/notes/Project/Effective-C++-Series/Array-As-an-Argument","text":"Array As an Argument"},{"source":"/notes/Project/Effective-C++-Series/Template-ParamType-deduction","target":"/notes/Project/Effective-C++-Series/Function-As-an-Argument","text":"Function As an Argument"},{"source":"/notes/Project/Effective-C++-Series/Template-and-Generic-Programming","target":"/notes/Project/Effective-C++-Series/Member-Function-Template","text":"Member Function Template"},{"source":"/notes/Project/Effective-C++-Series/Template-%E5%B8%B6%E4%BE%86%E7%9A%84%E7%A8%8B%E5%BC%8F%E7%A2%BC%E8%86%A8%E8%84%B9","target":"/notes/Project/Effective-C++-Series/%E7%B9%BC%E6%89%BF%E6%99%82%E7%9A%84%E5%90%8D%E7%A8%B1%E9%81%AE%E6%8E%A9%E8%A1%8C%E7%82%BA","text":"繼承時的名稱遮掩行為"},{"source":"/notes/Project/Effective-C++-Series/Template-%E5%B8%B6%E4%BE%86%E7%9A%84%E7%A8%8B%E5%BC%8F%E7%A2%BC%E8%86%A8%E8%84%B9","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","text":"了解如何在 Template 中指涉 Base Class 成員"},{"source":"/notes/Project/Effective-C++-Series/Template-%E5%B8%B6%E4%BE%86%E7%9A%84%E7%A8%8B%E5%BC%8F%E7%A2%BC%E8%86%A8%E8%84%B9","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","text":"了解 Inline 的裡裡外外"},{"source":"/notes/Project/Effective-C++-Series/Template-%E8%88%87%E9%9A%B1%E5%BC%8F%E4%BB%8B%E9%9D%A2","target":"/notes/Project/Effective-C++-Series/operator-overloading","text":"operator overloading"},{"source":"/notes/Project/Effective-C++-Series/Total-Template-Specialization","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","text":"了解如何在 Template 中指涉 Base Class 成員"},{"source":"/notes/Project/Effective-C++-Series/Virtual-Function","target":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","text":"區分介面繼承(interface)和實作繼承(implement)"},{"source":"/notes/Project/Effective-C++-Series/Virtual-Function","target":"/notes/Project/Effective-C++-Series/%E5%B0%91%E5%81%9A%E8%BD%89%E5%9E%8B%E5%8B%95%E4%BD%9CMinimize-casting","text":"少做轉型動作(Minimize casting)"},{"source":"/notes/Project/Effective-C++-Series/non-member-non-friend-function","target":"/notes/Project/Effective-C++-Series/Non-member-Non-friend-Function-%E7%9A%84%E5%B0%81%E8%A3%9D%E5%BA%A6%E5%84%AA%E6%96%BC-Member-Function","text":"Non-member \u0026\u0026 Non-friend Function 的封裝度優於 Member Function"},{"source":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","target":"/notes/Project/Effective-C++-Series/%E7%B7%A8%E8%AD%AF%E4%BE%9D%E5%AD%98-%E5%AE%A3%E5%91%8A%E5%BC%8F%E5%AE%9A%E7%BE%A9%E5%BC%8F%E8%88%87%E5%AF%A6%E4%BD%9C%E7%B4%B0%E7%AF%80","text":"編譯依存-宣告式、定義式與實作細節"},{"source":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","target":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","text":"區分介面繼承(interface)和實作繼承(implement)"},{"source":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","target":"/notes/Project/Effective-C++-Series/Pure-Virtual-Function","text":"Pure Virtual Function"},{"source":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","target":"/notes/Project/Effective-C++-Series/%E5%B7%A5%E5%BB%A0%E5%87%BD%E5%BC%8F-Factory-Function","text":"工廠函式 (Factory Function)"},{"source":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","text":"為多型用途的基礎類別宣告 virtual 解構式"},{"source":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","target":"/notes/Project/Effective-C++-Series/%E4%B8%8D%E8%A6%81%E7%82%BA%E9%9D%9E%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84-Base-Class-%E5%AE%A3%E5%91%8A-Virtual-Function","text":"不要為非多型用途的 Base Class 宣告 Virtual Function"},{"source":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","text":"了解 Inline 的裡裡外外#向 Compiler 發出申請"},{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","target":"/notes/Project/Effective-C++-Series/%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%99%82%E8%AB%8B%E7%82%BA%E6%A8%A1%E6%9D%BF%E5%AE%9A%E7%BE%A9%E9%9D%9E%E6%88%90%E5%93%A1%E5%87%BD%E5%BC%8F","text":"需要型別轉換時請為模板定義非成員函式"},{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","target":"/notes/Project/Effective-C++-Series/%E5%BB%BA%E6%A7%8B%E5%92%8C%E8%A7%A3%E6%A7%8B%E5%BC%8F%E6%98%AF-inline-%E7%9A%84%E7%B3%9F%E7%B3%95%E4%BA%BA%E9%81%B8","text":"建構和解構式是 inline 的糟糕人選"},{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","target":"/notes/Project/Effective-C++-Series/80-20-Rule","text":"80-20 Rule"},{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","target":"/notes/Project/Effective-C++-Series/%E7%B9%BC%E6%89%BF%E6%99%82%E7%9A%84%E5%90%8D%E7%A8%B1%E9%81%AE%E6%8E%A9%E8%A1%8C%E7%82%BA","text":"繼承時的名稱遮掩行為"},{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","target":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","text":"絕不重新定義繼承來的 Non-virtual Function"},{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","target":"/notes/Project/Effective-C++-Series/Total-Template-Specialization","text":"Total Template Specialization"},{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","target":"/notes/Project/Effective-C++-Series/%E4%BD%BF%E7%94%A8%E9%97%9C%E9%8D%B5%E5%AD%97-using-%E8%AE%93%E7%89%B9%E5%AE%9A-function-%E5%9C%A8-Scope-%E5%85%A7%E5%8F%AF%E8%A6%8B","text":"使用關鍵字 using 讓特定 function 在 Scope 內可見"},{"source":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","target":"/notes/Project/Effective-C++-Series/%E7%B9%BC%E6%89%BF%E6%99%82%E7%9A%84%E5%90%8D%E7%A8%B1%E9%81%AE%E6%8E%A9%E8%A1%8C%E7%82%BA","text":"繼承時的名稱遮掩行為"},{"source":"/notes/Project/Effective-C++-Series/%E4%BD%BF%E7%94%A8%E9%97%9C%E9%8D%B5%E5%AD%97-using-%E8%AE%93%E7%89%B9%E5%AE%9A-function-%E5%9C%A8-Scope-%E5%85%A7%E5%8F%AF%E8%A6%8B","target":"/notes/Project/Effective-C++-Series/%E7%B9%BC%E6%89%BF%E6%99%82%E7%9A%84%E5%90%8D%E7%A8%B1%E9%81%AE%E6%8E%A9%E8%A1%8C%E7%82%BA","text":"繼承時的名稱遮掩行為"},{"source":"/notes/Project/Effective-C++-Series/%E4%BD%BF%E7%94%A8%E9%97%9C%E9%8D%B5%E5%AD%97-using-%E8%AE%93%E7%89%B9%E5%AE%9A-function-%E5%9C%A8-Scope-%E5%85%A7%E5%8F%AF%E8%A6%8B","target":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","text":"確保 Derived Class 和 Base Class 之間必然保持 Is-a 關係"},{"source":"/notes/Project/Effective-C++-Series/%E4%BD%BF%E7%94%A8%E9%97%9C%E9%8D%B5%E5%AD%97-using-%E8%AE%93%E7%89%B9%E5%AE%9A-function-%E5%9C%A8-Scope-%E5%85%A7%E5%8F%AF%E8%A6%8B","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E5%9C%A8-Template-%E4%B8%AD%E6%8C%87%E6%B6%89-Base-Class-%E6%88%90%E5%93%A1","text":"了解如何在 Template 中指涉 Base Class 成員"},{"source":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","target":"/notes/Project/Effective-C++-Series/Pure-Virtual-Function","text":"Pure Virtual Function"},{"source":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","target":"/notes/Project/Effective-C++-Series/Impure-Virtual-Function","text":"Impure Virtual Function"},{"source":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","target":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","text":"絕不重新定義繼承來的 Non-virtual Function"},{"source":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","target":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","text":"為多型用途的基礎類別宣告 virtual 解構式"},{"source":"/notes/Project/Effective-C++-Series/%E5%A4%9A%E9%87%8D%E7%B9%BC%E6%89%BF-Multiple-Inheritance-MI","target":"/notes/Project/Effective-C++-Series/Virtual-Base-Class","text":"Virtual Base Class"},{"source":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","target":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E5%AE%9A-Composition-%E5%A1%91%E9%80%A0%E7%9A%84%E6%98%AF-Has-A%E9%97%9C%E4%BF%82-%E6%88%96-%E6%A0%B9%E6%93%9A%E6%9F%90%E7%89%A9%E5%AF%A6%E4%BD%9C%E7%9A%84%E9%97%9C%E4%BF%82","text":"確定 Composition 塑造的是 'Has-A'關係 或 '根據某物實作'的關係"},{"source":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","target":"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8","text":"讓介面易於被使用，不易誤用"},{"source":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","target":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","text":"確保 Derived Class 和 Base Class 之間必然保持 Is-a 關係"},{"source":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","target":"/notes/Project/Effective-C++-Series/%E5%B0%87%E6%AA%94%E6%A1%88%E7%9A%84%E7%B7%A8%E8%AD%AF%E4%BE%9D%E5%AD%98%E9%97%9C%E4%BF%82%E9%99%8D%E5%88%B0%E6%9C%80%E4%BD%8E","text":"將檔案的編譯依存關係降到最低"},{"source":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","target":"/notes/Project/Effective-C++-Series/EBO-Empty-Base-Optimization","text":"EBO (Empty Base Optimization)"},{"source":"/notes/Project/Effective-C++-Series/%E5%B0%87%E6%AA%94%E6%A1%88%E7%9A%84%E7%B7%A8%E8%AD%AF%E4%BE%9D%E5%AD%98%E9%97%9C%E4%BF%82%E9%99%8D%E5%88%B0%E6%9C%80%E4%BD%8E","target":"/notes/Project/Effective-C++-Series/%E7%B7%A8%E8%AD%AF%E4%BE%9D%E5%AD%98-%E5%AE%A3%E5%91%8A%E5%BC%8F%E5%AE%9A%E7%BE%A9%E5%BC%8F%E8%88%87%E5%AF%A6%E4%BD%9C%E7%B4%B0%E7%AF%80","text":"編譯依存-宣告式、定義式與實作細節"},{"source":"/notes/Project/Effective-C++-Series/%E5%B0%87%E6%AA%94%E6%A1%88%E7%9A%84%E7%B7%A8%E8%AD%AF%E4%BE%9D%E5%AD%98%E9%97%9C%E4%BF%82%E9%99%8D%E5%88%B0%E6%9C%80%E4%BD%8E","target":"/notes/Project/Effective-C++-Series/pimpl-idiom-pointer-to-implementation","text":"pimpl idiom (pointer to implementation)"},{"source":"/notes/Project/Effective-C++-Series/%E5%B0%91%E5%81%9A%E8%BD%89%E5%9E%8B%E5%8B%95%E4%BD%9CMinimize-casting","target":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","text":"區分介面繼承(interface)和實作繼承(implement)"},{"source":"/notes/Project/Effective-C++-Series/%E6%80%9D%E7%B6%AD%E8%AA%A4%E5%8D%80-%E7%89%A9%E4%BB%B6%E5%BE%88%E5%B0%8F%E5%B0%B1%E5%8F%AF%E4%BB%A5-Pass-By-value","target":"/notes/Project/Effective-C++-Series/Pass-by-value-%E7%95%B6%E4%B8%AD%E7%9A%84-Copy-%E8%A1%8C%E7%82%BA","text":"Pass by value 當中的 Copy 行為"},{"source":"/notes/Project/Effective-C++-Series/%E6%89%93%E7%A0%B4-Constness-%E9%99%90%E5%88%B6","target":"/notes/Project/Effective-C++-Series/%E9%81%BF%E5%85%8D%E5%82%B3%E5%9B%9E-Handles-%E6%8C%87%E5%90%91%E7%89%A9%E4%BB%B6%E7%9A%84-Private-Protected-Member-Data","text":"避免傳回 Handles 指向物件的 Private \u0026 Protected Member Data"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/Item47-Use-traits-classes-for-information-about-types","text":"Item47 Use traits classes for information about types"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/%E5%B7%A5%E5%BB%A0%E5%87%BD%E5%BC%8F-Factory-Function","text":"工廠函式 (Factory Function)"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/Smart-Pointer","text":"條款13 使用資源管理器"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8","text":"讓介面易於被使用，不易誤用"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/%E4%B8%8D%E8%A6%81%E7%82%BA%E9%9D%9E%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84-Base-Class-%E5%AE%A3%E5%91%8A-Virtual-Function","text":"不要為非多型用途的 Base Class 宣告 Virtual Function"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/Item55-Familiarize-yourself-with-Boost","text":"Item55 Familiarize yourself with Boost"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84%E5%9F%BA%E7%A4%8E%E9%A1%9E%E5%88%A5%E5%AE%A3%E5%91%8A-virtual-%E8%A7%A3%E6%A7%8B%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/Pure-Virtual-Destructor","text":"Pure Virtual Destructor"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E7%95%B0%E5%B8%B8%E5%AE%89%E5%85%A8-Exception-safe-%E8%80%8C%E5%8A%AA%E5%8A%9B%E6%98%AF%E5%80%BC%E5%BE%97%E7%9A%84","target":"/notes/Project/Effective-C++-Series/Mutex","text":"Mutex"},{"source":"/notes/Project/Effective-C++-Series/%E7%82%BA%E7%95%B0%E5%B8%B8%E5%AE%89%E5%85%A8-Exception-safe-%E8%80%8C%E5%8A%AA%E5%8A%9B%E6%98%AF%E5%80%BC%E5%BE%97%E7%9A%84","target":"/notes/Project/Effective-C++-Series/Modern-C++-noexcept","text":"Modern C++ noexcept"},{"source":"/notes/Project/Effective-C++-Series/%E7%95%B6%E6%89%80%E6%9C%89%E7%9A%84%E5%8F%83%E6%95%B8%E9%83%BD%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%8E%A1%E7%94%A8-Non-member-Function","target":"/notes/Project/Effective-C++-Series/operator-overloading","text":"operator overloading"},{"source":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","target":"/notes/Project/Effective-C++-Series/Has-A","text":"Has A"},{"source":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","target":"/notes/Project/Effective-C++-Series/Is-Implemented-in-Terms-of","text":"Is Implemented in Terms of"},{"source":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","target":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E5%AE%9A-Composition-%E5%A1%91%E9%80%A0%E7%9A%84%E6%98%AF-Has-A%E9%97%9C%E4%BF%82-%E6%88%96-%E6%A0%B9%E6%93%9A%E6%9F%90%E7%89%A9%E5%AF%A6%E4%BD%9C%E7%9A%84%E9%97%9C%E4%BF%82","text":"確定 Composition 塑造的是 'Has-A'關係 或 '根據某物實作'的關係"},{"source":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","target":"/notes/Project/Effective-C++-Series/%E5%AF%A9%E6%85%8E%E7%9A%84%E4%BD%BF%E7%94%A8-Private-%E7%B9%BC%E6%89%BF","text":"審慎的使用 Private 繼承"},{"source":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E5%AE%9A-Composition-%E5%A1%91%E9%80%A0%E7%9A%84%E6%98%AF-Has-A%E9%97%9C%E4%BF%82-%E6%88%96-%E6%A0%B9%E6%93%9A%E6%9F%90%E7%89%A9%E5%AF%A6%E4%BD%9C%E7%9A%84%E9%97%9C%E4%BF%82","target":"/notes/Project/Effective-C++-Series/%E4%BA%86%E8%A7%A3-Inline-%E7%9A%84%E8%A3%A1%E8%A3%A1%E5%A4%96%E5%A4%96","text":"了解 Inline 的裡裡外外"},{"source":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","target":"/notes/Project/Effective-C++-Series/%E7%B9%BC%E6%89%BF%E6%99%82%E7%9A%84%E5%90%8D%E7%A8%B1%E9%81%AE%E6%8E%A9%E8%A1%8C%E7%82%BA","text":"繼承時的名稱遮掩行為"},{"source":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","target":"/notes/Project/Effective-C++-Series/%E9%9D%9C%E6%85%8B%E7%B6%81%E5%AE%9A-statically-bound-%E8%88%87%E5%8B%95%E6%85%8B%E7%B6%81%E5%AE%9A-dynamically-bound","text":"靜態綁定 (statically bound) 與動態綁定 (dynamically bound)"},{"source":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","target":"/notes/Project/Effective-C++-Series/%E7%A2%BA%E4%BF%9D-Derived-Class-%E5%92%8C-Base-Class-%E4%B9%8B%E9%96%93%E5%BF%85%E7%84%B6%E4%BF%9D%E6%8C%81-Is-a-%E9%97%9C%E4%BF%82","text":"確保 Derived Class 和 Base Class 之間必然保持 Is-a 關係"},{"source":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","target":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","text":"區分介面繼承(interface)和實作繼承(implement)"},{"source":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Function-Pointer-%E5%92%8C-tr1-function-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Strategy-Pattern","target":"/notes/Project/Effective-C++-Series/Classic-Strategy-Pattern","text":"Strategy Pattern"},{"source":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Function-Pointer-%E5%92%8C-tr1-function-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Strategy-Pattern","target":"/notes/Project/Effective-C++-Series/C++11-std-function","text":"C++11 std function"},{"source":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Function-Pointer-%E5%92%8C-tr1-function-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Strategy-Pattern","target":"/notes/Project/Effective-C++-Series/non-member-non-friend-function","text":"non-member \u0026\u0026 non-friend function"},{"source":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Non-Virtual-Interface-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Template-Method-Pattern","target":"/notes/Project/Effective-C++-Series/Template-Method","text":"Template Method"},{"source":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Non-Virtual-Interface-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Template-Method-Pattern","target":"/notes/Project/Effective-C++-Series/%E4%B8%8D%E8%A6%81%E7%82%BA%E9%9D%9E%E5%A4%9A%E5%9E%8B%E7%94%A8%E9%80%94%E7%9A%84-Base-Class-%E5%AE%A3%E5%91%8A-Virtual-Function","text":"不要為非多型用途的 Base Class 宣告 Virtual Function"},{"source":"/notes/Project/Effective-C++-Series/%E8%A7%A3%E6%A7%8B%E5%BC%8F%E8%88%87%E7%95%B0%E5%B8%B8","target":"/notes/Project/Effective-C++-Series/Modern-C++-noexcept","text":"Modern C++ noexcept"},{"source":"/notes/Project/Effective-C++-Series/%E8%A7%A3%E6%A7%8B%E5%BC%8F%E8%88%87%E7%95%B0%E5%B8%B8","target":"/notes/Project/Effective-C++-Series/Chapter3","text":"Chapter3"},{"source":"/notes/Project/Effective-C++-Series/%E8%A7%A3%E6%A7%8B%E5%BC%8F%E8%88%87%E7%95%B0%E5%B8%B8","target":"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8","text":"讓介面易於被使用，不易誤用"},{"source":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","target":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","text":"條款4 確定物件在使用前已經初始化"},{"source":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","target":"/notes/Project/Effective-C++-Series/%E5%8D%80%E5%88%86%E4%BB%8B%E9%9D%A2%E7%B9%BC%E6%89%BFinterface%E5%92%8C%E5%AF%A6%E4%BD%9C%E7%B9%BC%E6%89%BFimplement","text":"區分介面繼承(interface)和實作繼承(implement)"},{"source":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","target":"/notes/Project/Effective-C++-Series/Item36-Never-redefine-an-inherited-non-virtual-function","text":"Item36 Never redefine an inherited non-virtual function"},{"source":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","target":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","text":"條款7 為多型用途的基礎類別宣告 virtual 解構式"},{"source":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","target":"/notes/Project/Effective-C++-Series/Non-member-Non-friend-Function-%E7%9A%84%E5%B0%81%E8%A3%9D%E5%BA%A6%E5%84%AA%E6%96%BC-Member-Function","text":"Non-member \u0026\u0026 Non-friend Function 的封裝度優於 Member Function"},{"source":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","target":"/notes/Project/Effective-C++-Series/%E7%95%B6%E6%89%80%E6%9C%89%E7%9A%84%E5%8F%83%E6%95%B8%E9%83%BD%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%8E%A1%E7%94%A8-Non-member-Function","text":"當所有的參數都需要型別轉換，採用 Non-member Function"},{"source":"/notes/Project/Effective-C++-Series/%E8%A8%AD%E8%A8%88%E6%96%B0-Class-%E7%9A%84%E6%BA%96%E5%89%87","target":"/notes/Project/Effective-C++-Series/%E7%9B%A1%E5%8F%AF%E8%83%BD%E5%BB%B6%E5%BE%8C%E8%AE%8A%E6%95%B8%E5%AE%9A%E7%BE%A9%E5%BC%8F%E7%9A%84%E5%87%BA%E7%8F%BE%E6%99%82%E9%96%93","text":"盡可能延後變數定義式的出現時間"},{"source":"/notes/Project/Effective-C++-Series/%E8%AE%93%E4%BB%8B%E9%9D%A2%E6%98%93%E6%96%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%B8%8D%E6%98%93%E8%AA%A4%E7%94%A8","target":"/notes/Project/Effective-C++-Series/Static-Object","text":"Static Object"},{"source":"/notes/Project/Effective-C++-Series/%E9%81%8B%E7%94%A8%E6%88%90%E5%93%A1%E5%87%BD%E5%BC%8F%E6%A8%A1%E6%9D%BF%E6%8E%A5%E5%8F%97%E6%89%80%E6%9C%89%E7%9B%B8%E5%AE%B9%E7%9A%84%E5%9E%8B%E5%88%A5","target":"/notes/Project/Effective-C++-Series/Template-and-Generic-Programming","text":"Template and Generic Programming"},{"source":"/notes/Project/Effective-C++-Series/%E9%81%BF%E5%85%8D%E5%82%B3%E5%9B%9E-Handles-%E6%8C%87%E5%90%91%E7%89%A9%E4%BB%B6%E7%9A%84-Private-Protected-Member-Data","target":"/notes/Project/Effective-C++-Series/%E6%89%93%E7%A0%B4-Constness-%E9%99%90%E5%88%B6","text":"打破 Constness 限制#Physical Constness"},{"source":"/notes/Project/Effective-C++-Series/%E9%81%BF%E5%85%8D%E5%82%B3%E5%9B%9E-Handles-%E6%8C%87%E5%90%91%E7%89%A9%E4%BB%B6%E7%9A%84-Private-Protected-Member-Data","target":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","text":"Effective C++ Outline#條款3 盡可能使用 const"},{"source":"/notes/Project/Effective-C++-Series/%E9%97%9C%E9%8D%B5%E5%AD%97-typename-%E5%9C%A8-Template-%E4%B8%AD%E7%9A%84%E6%84%8F%E6%B6%B5","target":"/notes/Project/Effective-C++-Series/typedef-and-using","text":"typedef and using"},{"source":"/notes/Project/Effective-C++-Series/%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%99%82%E8%AB%8B%E7%82%BA%E6%A8%A1%E6%9D%BF%E5%AE%9A%E7%BE%A9%E9%9D%9E%E6%88%90%E5%93%A1%E5%87%BD%E5%BC%8F","target":"/notes/Project/Effective-C++-Series/%E7%95%B6%E6%89%80%E6%9C%89%E7%9A%84%E5%8F%83%E6%95%B8%E9%83%BD%E9%9C%80%E8%A6%81%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B%E6%8E%A1%E7%94%A8-Non-member-Function","text":"當所有的參數都需要型別轉換，採用 Non-member Function"},{"source":"/notes/Project/Effective-C++-Series/%E9%9D%9C%E6%85%8B%E7%B6%81%E5%AE%9A-statically-bound-%E8%88%87%E5%8B%95%E6%85%8B%E7%B6%81%E5%AE%9A-dynamically-bound","target":"/notes/Project/Effective-C++-Series/%E7%B5%95%E4%B8%8D%E9%87%8D%E6%96%B0%E5%AE%9A%E7%BE%A9%E7%B9%BC%E6%89%BF%E4%BE%86%E7%9A%84-Non-virtual-Function","text":"絕不重新定義繼承來的 Non-virtual Function"},{"source":"/notes/Project/Effective-C++-Series/%E9%9D%9C%E6%85%8B%E7%B6%81%E5%AE%9A-statically-bound-%E8%88%87%E5%8B%95%E6%85%8B%E7%B6%81%E5%AE%9A-dynamically-bound","target":"/notes/Project/Effective-C++-Series/%E8%97%89%E7%94%B1-Non-Virtual-Interface-%E6%89%8B%E6%B3%95%E5%AF%A6%E7%8F%BE-Template-Method-Pattern","text":"NVI"},{"source":"/notes/Resource/MOCs/C++-Resources","target":"/notes/Project/Effective-C++-Series/Effective-C++-Outline","text":"Effective C++ Outline"},{"source":"/notes/Resource/MOCs/C++-Resources","target":"/notes/Project/Effective-C++-Series/Effective-modern-C++-Outline","text":"Effective modern C++ Outline"},{"source":"/notes/Resource/MOCs/Design-Pattern","target":"/notes/Project/Effective-C++-Series/Template-Method","text":"Template Method"},{"source":"/notes/Resource/MOCs/Design-Pattern","target":"/notes/Project/Effective-C++-Series/Classic-Strategy-Pattern","text":"Classic Strategy Pattern"}]}